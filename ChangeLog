2008-09-22  Kevin L. Mitchell  <klmitch@mit.edu>

	* include/mode.h: begin sketching out structures for new, unified
	mode processing system

2008-09-19  Kevin L. Mitchell  <klmitch@mit.edu>

	* include/flagset.h: we declared flagpage_t, then never used
	it--fixed; add FlagZero() and FlagSwap() to zero a flagset and
	swap the values of 2 flagsets

2008-03-27  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/watch.c: implementation of generic watch subsystem

	* include/watch.h: implementation of generic watch subsystem

2008-03-22  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/ancillary.c: implementation of generic ancillary data
	subsystem

	* include/ancillary.h: implementation of generic ancillary data
	subsystem

	* ircd/register.c: minor correction to copyright comment--this is
	ircd/register.c, not include/register.h!

2008-03-22  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/register.c: implementation of generic registration
	subsystem

	* include/register.h: header file for generic registration
	subsystem

2008-03-20  Kevin L. Mitchell  <klmitch@mit.edu>

	* include/client.h (infousermodes): add +O to the list of
	supported usermodes--some clients complain if they see it
	otherwise

2008-03-20  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/ircd_features.c: update CHANMODES ISUPPORT setting to
	include 'R' channel mode

	* ircd/channel.c: add MODE_REGISTERED, mapped to +R; arrange to
	only have it settable or clearable by remote users or /opmode

	* include/channel.h: add MODE_REGISTERED, update infochanmodes to
	include 'R' channel mode

2008-03-20  Kevin L. Mitchell  <klmitch@mit.edu>

	* include/client.h: IsLocOp() now checks to see if its MyUser() as
	well; IsAnOper() uses IsOper() and IsLocOp() instead of directly
	testing the flags

2008-03-15  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/ircd.c: you know what, let's just make those SQUIT
	messages, like they were probably supposed to be in the beginning

	* ircd/ircd.c: add a preceding colon in ERROR messages

	* doc/example.conf: document 'exempt' port flag

	* ircd/send.c: implement sendto_lusers() to send server notices to
	all local users

	* ircd/parse.c: add ms_die, ms_rehash, and ms_restart

	* ircd/m_restart.c: reimplemented mo_restart() in terms of
	exit_schedule(); implemented ms_restart() under control of
	FEAT_NETWORK_RESTART

	* ircd/m_rehash.c: implemented ms_rehash() under control of
	FEAT_NETWORK_REHASH

	* ircd/m_die.c: reimplemented mo_die() in terms of
	exit_schedule(); implemented ms_die() under control of
	FEAT_NETWORK_DIE

	* ircd/listener.c: create new 'exempt' flag for listeners,
	indicated in /stats p by an 'X' flag; fix a typo in a length fed
	to send()

	* ircd/ircd_signal.c: use exit_schedule() in place of server_die()
	and server_restart()

	* ircd/ircd_parser.y: add port 'exempt' clause to mark a port as
	exempt from connection restrictions during timed /restart or /die

	* ircd/ircd_lexer.l: add 'exempt' keyword

	* ircd/ircd_features.c: new features NETWORK_REHASH (allow /rehash
	from the network), NETWORK_RESTART (ibid, for /restart), and
	NETWORK_DIE (ibid)

	* ircd/ircd.c: suite of functions to implement scheduled exits
	(abstract term for both server restart and server termination);
	includes definition of the 'refuse' flag to block new client
	connections except from exempt ports; also remove deprecated
	server_die() and server_restart()

	* ircd/engine_select.c: call exit_schedule() instead of
	server_restart()

	* ircd/engine_poll.c: call exit_schedule() instead of
	server_restart()

	* ircd/engine_kqueue.c: call exit_schedule() instead of
	server_restart()

	* ircd/engine_epoll.c: call exit_schedule() instead of
	server_restart()

	* ircd/engine_devpoll.c: call exit_schedule() instead of
	server_restart()

	* include/send.h: declare sendto_lusers() to send a server notice
	to all local users

	* include/msg.h: create 2 character tokens for rehash, restart,
	and die

	* include/listener.h: create new "exempt" flag for listeners, to
	make a specific port exempt from the restrictions implied by the
	refuse flag

	* include/ircd_features.h: define features FEAT_NETWORK_REHASH,
	FEAT_NETWORK_RESTART, and FEAT_NETWORK_DIE

	* include/ircd.h: set up struct PendingExit; define PEND_INT_*
	macros; remove declarations for server_die() and server_restart(),
	which are now replaced by exit_cancel() and exit_schedule();
	declare refuse integer to signal that new connections are to be
	refused

	* include/handlers.h: add declarations for ms_die(), ms_rehash(),
	and ms_restart()

	* doc/readme.features: document new features

2007-12-05  Michael Poole <mdpoole@troilus.org>

	* include/dbuf.h (DBufAllocCount): Make unsigned.
	(DBufUsedCount): Likewise.

	* include/ircd_crypt.h (crypt_token_size): Make unsigned.

	* include/ircd_features.h (feature_uint): Declare new function.

	* include/res.h (irc_in_addr_valid): Since in6_16[0] is unsigned
	short, bitwise not could happen after extension to signed int,
	which would give us undesired results.  Compare to 65535 instead.

	* ircd/channel.c (add_invite): Make max and count unsigned.
	(modebuf_extract): Make i and len unsigned.
	(joinbuf_flush): Make i unsigned.

	* ircd/class.c (init_class): Use feature_uint() to retrieve
	the value of FEAT_DEFAULTMAXSENDQLENGTH.
	(add_class): Likewise.
	(get_sendq): Likewise.

	* ircd/dbuf.c (DBufAllocCount): Make unsigned.
	(DBufUsedCount): Make unsigned.
	(dbuf_alloc): Use feature_uint() for FEAT_BUFFERPOOL.

	* ircd/engine_poll.c (engine_add): Make i unsigned.
	(engine_loop): Likewise.

	* ircd/gline.c (count_realnames): Cast minlen to unsigned for
	comparison.  Should be safe since it comes from matchcomp().
	(gline_add): Cast the result of ircd_snprintf() to unsigned.
	Should be safe since negative numbers will exceed sizeof(uhmask).

	* ircd/ircd_events.c (gen_flags): Give loc type size_t.
	(sock_flags): Likewise.

	* ircd/ircd_features.c (set_isupport_maxchannels): Use
	feature_uint() for FEAT_MAXCHANNELSPERUSER.
	(set_isupport_nicklen): Likewise for FEAT_NICKLEN.
	(set_isupport_channellen): Likewise for FEAT_CHANNELLEN.
	(FEAT_UINT): New value.
	(F_U): New helper macro.
	(features): Use F_U instead of F_I for FEAT_BUFFERPOOL,
	FEAT_CLIENT_FLOOD, FEAT_NICKNAMEHISTORYLENGTH, FEAT_NICKLEN,
	FEAT_MAXCHANNELSPERUSER, FEAT_DEFAULTMAXSENDQLENGTH and
	FEAT_CHANNELLEN.
	(feature_set): Handle FEAT_UINT case.
	(feature_reset): Likewise.
	(feature_get): Likewise.
	(feature_mark): Likewise.
	(feature_init): Likewise.
	(feature_report): Likewise.
	(feature_uint): New function.

	* ircd/ircd_parser.y (generalnumeric): Typecast the number as
	unsigned int.
	(featureitem): Make ii signed.
	(includeblock): Make the ~0 unsigned long to match cb_allowed.

	* ircd/ircd_snprintf.c (PAD_LENGTH): Make signed.

	* ircd/m_cap.c (send_caplist): Make i and loc unsigned.

	* ircd/m_join.c (m_join): Use feature_uint() to retrieve the value
	of FEAT_MAXCHANNELSPERUSER.

	* ircd/m_nick.c (m_nick): Likewise for FEAT_NICKLEN.

	* ircd/m_server.c (check_loop_and_lh): Make hop unsigned.
	(mr_server): Likewise.

	* ircd/msgq.c (bufsize): Make result unsigned.
	(msgq_alloc): Make power unsigned.  Use feature_uint() to retrieve
	the value of FEAT_BUFFERPOOL.

	* ircd/numnicks.c (markMatchexServer): Make i unsigned.
	(find_match_server): Likewise.

	* ircd/s_bsd.c (read_packet): Use feature_uint() to retrieve the
	value of FEAT_CLIENT_FLOOD.

	* ircd/s_debug.c (debug_serveropts): Make bp unsigned.  Use
	feature_uint() to retrieve the value of FEAT_BUFFERPOOL.
	(send_usage): Fix format string for dbufs.
	(count_memory): Use feature_uint() to retrieve the value of
	FEAT_NICKNAMEHISTORYLENGTH.  Fix format string for whowas array
	dimension and dbuf counts.

	* ircd/s_misc.c (exit_downlinks): Make i unsigned.

	* ircd/s_user.c (set_user_mode): Make i unsigned.
	(umode_str): Likewise.
	(send_umode): Likewise.
	(build_isupport_lines): Use feature_uint() to retrieve the value
	of FEAT_NICKLEN.

	* ircd/uping.c (uping_read): Make pingtime type time_t.
	Typecast it before passing it to sprintf().

	* ircd/whowas.c (whowas_alloc): Use feature_uint() to retrieve the
	value of FEAT_NICKNAMEHISTORYLENGTH.  Fix format string to match.

2007-12-03  Michael Poole <mdpoole@troilus.org>

	* doc/Makefile.in (DATAROOTDIR): Define.
	(DATADIR): Likewise.
	
2007-11-30  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/version.c.SH: correct invalid syntax in shell case/esac

	* ircd/ircd_lexer.l: provide an implementation of yywrap() so we
	no longer have to link against -lfl

	* configure.in: drop tests on LEXLIB and don't add it to the list
	of libs

	* ircd/gline.c (gline_add): apply too-many-users test to realname
	G-lines *only* when the origin is my user (or a user, for
	remote-local G-lines)

2007-11-28  Michael Poole <mdpoole@troilus.org>

	* tests/test-driver.pl (drv_default): Fix expect for numeric
	responses that have non-trivial parameters.
	(check_expect): Simplify (and fix) sender name check.

	* tests/bug-1640796.cmd: Update expect NNN for new POE behavior
	and part to not try to part the channel named "leaving".

	* tests/bug-1674539.cmd: Update expect NNN for new POE behavior.

	* tests/bug-1840011.cmd: New test script.
	
2007-11-28  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (mode_ban_invalidate): Clarify Doxygen comments.
	(apply_ban): Only block narrower bans if the wider ban is active.

2007-11-24  Michael Poole <mdpoole@troilus.org>

	* ircd/m_names.c (do_names): Don't try to re-initialize the start
	of buf[] for each line.  It's done the first time around and that
	can be reused safely.

2007-11-17  Michael Poole <mdpoole@troilus.org>

	* ircd/m_stats.c (m_stats): Properly assign param before it is
	used in the hunt_server_cmd() call.
	
2007-11-17  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (iauth_disconnect): Avoid destroying invalid
	sockets.
	(iauth_stderr_callback): Disconnect iauth child if stderr has
	EOF (in case stdin notification is delayed somehow).
	
2007-11-04  Michael Poole <mdpoole@troilus.org>

	* ircd/umkpasswd.c (sum): Typecast buffer to avoid a warning about
	the parameter type being passed to strlen().
	
2007-11-04  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Document /LIST M as controlled by list_chan.

	* include/channel.h (LISTARG_SHOWMODES): Define.

	* ircd/hash.c (list_next_channels): Handle it.

	* ircd/m_list.c (show_usage): Document 'M' flag.
	(param_parse): Recognize 'M' as LISTARGS_SHOWMODES.

2007-11-04  Michael Poole <mdpoole@troilus.org>

	* ircd/m_list.c (param_parse): Reverse comparison direction when
	converting from minutes to time_t, and which bound is set (so that
	T<time_t works correctly).  Also switch is_time cases so that 'T'
	and 'C' work as documented.  Remove a "break" after a "return".

	(m_list): Remove a "break" after a "return".

2007-10-29  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_lexer.l (YY_INPUT): Redefine to use fbgets().
	(init_lexer): Return a value to indicate failure.  Use fbopen().
	(deinit_lexer): New function.

	* ircd/s_conf.c (read_configuration_file): Update extern
	declarations.  Bail if init_lexer() fails.  Call deinit_lexer()
	rather than directly munging yyin.

2007-10-29  Michael Poole <mdpoole@troilus.org>

	* include/gline.h: Delete declaration of gline_propagate().

	* include/whocmds.h: Delete declaration of count_users().

	* ircd/whocmds.c (count_users): Move to gline.c as a static.

	* ircd/gline.c (whocmds.h): Remove #include.
	(gliter): Document boolean trickiness.  Add missing trickiness
	when gl_flags has bits set besides GLINE_ACTIVE.
	(make_gline): Get rid of now-unused "after" variable and the
	comments related to overlapping G-lines.
	(gline_propagate): Make static.
	(count_users): Move from whocmds.c as a static function.
	(count_realnames): New function.
	(gline_add): Require a force to hit lots of users with a realname
	G-line.

2007-09-05  Michael Poole <mdpoole@troilus.org>

	* ircd/m_gline.c (ms_gline): Remove dead branch when 4 < parc < 5.
	(mo_gline): Consistently use the last argument as the reason.

2007-09-05  Michael Poole <mdpoole@troilus.org>

	* ircd/Makefile.in: Fix dependencies for version.h generation.

2007-08-20  Michael Poole <mdpoole@troilus.org>

	* ircd/send.c (sendwallto_group_butone): Move a feature_bool()
	call out of a loop.  Convert HasFlag() uses to appropriate macros
	from client.h.

2007-08-20  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_string.c (ircd_aton_ip4): Allow a sequence of *.* at
	the end of an IPv4 mask.
	(ipmask_parse): Likewise for *:* at the end of IPv6 masks.

	* ircd/test/ircd_in_addr_t.c (test_masks): Add tests for this.

2007-08-20  Michael Poole <mdpoole@troilus.org>

	* ircd/s_user.c (register_user): Update inv_clients and opers
	counts.  Call client_set_privs() for local users.
	(set_nick_name): Do not call client_set_privs() for remote users.
	(set_user_mode): Move oper and invisible client checks inside the
	IsRegistered() section.

2007-08-14  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (DONE_*): Split key changes into _ADD and _DEL.
	(mode_parse_key): Check both, to properly handle -k+k changes.
	(mode_parse_upass): Likewise, for -U+U.
	(mode_parse_apass): Liekwise, for -A+A (in case that ever happens).
	(mode_parse): Update which "done" flag is checked during a wipeout.

2007-08-13  Michael Poole <mdpoole@troilus.org>

	* ircd/s_user.c (whipser): CNOTICEs should not trigger away
	messages, only CPRIVMSGs.

2007-08-13  Michael Poole <mdpoole@troilus.org>

	* ircd/m_who.c (m_who): Reorder responses and change the
	ERR_QUERYTOOLONG parameter to be consistent with m_whois().
	
2007-08-13  Michael Poole <mdpoole@troilus.org>

	* ircd/s_user.c (register_user): Initialize umodev[] in a
	C89-compatible way.  (gcc 4.1.2 warned about it.)

2007-08-13  Michael Poole <mdpoole@troilus.org>

	* ircd/m_names.c (do_names): Add NAMES_DEL to comment.  Avoid use
	of strcat().  Get rid of ms_names(), which was basically a copy of
	m_names(), and merge the "showingdelayed" changes into m_names().
	Replace the recursion with iteration.

	* ircd/parse.c (msgtab): Use m_names(), not ms_names().

2007-08-08  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (report_iauth_conf): Remove end-of-stats message;
	m_stats() already does that.

	(report_iauth_stats): Likewise.

2007-08-08  Michael Poole <mdpoole@troilus.org>

	* include/res.h (irc_in_addr_is_ipv4): Fix classification of
	addresses like 0.0.0.0.

2007-07-21  Perry Lorier <isomer@undernet.org>

	* ircd/s_user.c: Move set_nick_name() to use set_user_mode(),
	set_user_mode() now interprets +r usermodes properly (and ignores
	them from non servers).  This fixes a problem where remote users
	weren't being counted properly anymore.

2007-07-20  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/m_gline.c: create abs_expire() macro to convert an expire
	timestamp from the network into an absolute time, if needed;
	rename expire_off to expire globally, since it now represents an
	absolute expiration time; use expire - CurrentTime in gline
	forwarding statements; in ms_gline(), use abs_expire() to convert
	network expiration timestamp into absolute timestamp; in
	mo_gline(), add CurrentTime to oper-provided expiration offset to
	convert to absolute timestamp

	* ircd/gline.c: assume expire and lifetime arguments to
	gline_add() and gline_modify() are already absolute timestamps;
	send lifetime parameter as an absolute timestamp, but leave expire
	timestamp as relative as first part of a 2-phase update

2007-07-12  Perry Lorier <isomer@undernet.org>
	Reconsider how we manage modes before registration, to avoid stats
	getting out of sync.

	* ircd/s_user.c (set_user_mode): Add new parameter to set_user_mode to
	ignore some modes.
	(register_user): Use set_user_mode to parse default usermode for
	users.

	* ircd/m_user.c: Add extra parameter to set_user_mode call

	* ircd/s_auth.c: Add extra parameter to set_user_mode call

	* ircd/m_mode.c: Add extra parameter to set_user_mode call

	* ircd/s_misc.c: Verify stats are consistant.

	* include/s_user.h: Change prototype, add flag definitions.

	* ircd/m_lusers.c (m_users): Assert that we're generating sane stats,
	include "unknowns" in the total user connections to avoid negative
	wrap arounds.

2007-07-12  Perry Lorier <isomer@undernet.org>
	
	* ircd/m_user.c (m_luser): Fix broken RFC 2812 on connect user mode 
	setting

2007-05-28  Michael Poole <mdpoole@troilus.org>

	* include/numeric.h (ERR_INPUTTOOLONG): New numeric.

	* ircd/s_bsd.c (read_packet): Use it.

	* ircd/s_err.c (replyTable): Give it a format string.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/m_burst.c (ms_burst): Do not let bursting servers join a
	user to a channel more than once.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_features.c (feature_set): Report new value of feature
	for /set.
	(feature_reset): Likewise, for /reset.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/m_burst.c (netride_modes): Return -1 if someone tries to
	remove modes in the burst.
	(ms_burst): Check for, and handle, that protocol violation.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/m_privs.c (mo_privs): Report "no such nickname" for unknown
	nicks in the list.  (Unfortunately, the nick is lost before ms_privs.)

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/listener.c (show_ports): Actually hide hidden ports from
	clients that should not see them.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/s_err.c (ERR_DONTCHEAT): Add apparently missing %s.
	
2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/m_connect.c (mo_connect): Return an error to a locop who
	tries to do a remote connect.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/parse.c (msgtab): Make SETTIME consistent with other
	oper commands, in using m_not_oper for non-opered clients.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_parser.y (pseudoblock): Forbid pseudo commands that
	are not all alphabetic characters.

2007-05-20  Michael Poole <mdpoole@troilus.org>

	* configure.in (maxcon): Check that maximum connections is
	sufficiently large to avoid underflow in MAXCLIENTS.
	
2007-05-20  Michael Poole <mdpoole@troilus.org>

	* include/supported.h (FEATURES2): Remove extra space.

	* ircd/m_admin.c (m_admin): Only check server mask against our
	name, so that it cannot leak information about other linked
	servers.

	* ircd/m_version.c (m_version): Likewise.
	
2007-04-15  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/m_gline.c: fix minor typo in code that forwards remote
	local activations/deactivations: %c takes characters, not
	pointers!
	(mo_gline): fix similar typo in code forwarding remote local
	G-lines by opers

2007-04-10  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_parser.y (iauth): Avoid problems related to MyFree's
	multiple evaluation of its argument.

2007-04-10  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/m_gline.c (ms_gline): lastmod must be non-zero

2007-04-04  Michael Poole <mdpoole@troilus.org>

	* ircd/s_conf.c (rehash): Restart resolver after reading the
	config file; this un-breaks the resolver after /rehash if the
	ircd.conf contains no "dns server = <ipstring>;" lines.

2007-04-01  J. R. Lenz <ralf@starshadow.com>

	* ircd/s_user.c (register_user): Check for host-hiding when fully
	registering a user.  [Comment added by Entrope.]

2007-03-31  Michael Poole <mdpoole@troilus.org>

	* doc/readme.iauth (IAuth M): Document new command.

	* ircd/m_user.c (m_user): Recognize RFC 2812 mode request and a
	saner usermode request.

	* ircd/s_auth.c (iauth_cmd_usermode): New command.
	(iauth_parse): Dispatch to it.

	* ircd/s_user.c (set_user_mode): Only broadcast usermode changes
	for registered clients.

	* tools/iauth-test (127.0.1.3): Test the new M command.

2007-03-31  Michael Poole <mdpoole@troilus.org>

	* ircd/m_mode.c (m_mode): Check and report target/source
	violations before calling set_user_mode().
	(ms_mode): Likewise.

	* ircd/s_user.c (set_user_mode): Remove those checks from here.

2007-03-31  Michael Poole <mdpoole@troilus.org>

	* include/ircd_events.h (struct Generators): Convert elements to
	be struct GenHeader*.
	(timer_next): Update to match.

	* ircd/ircd_events.c (timer_enqueue): Update to match.
	(signal_callback): Likewise.
	(timer_init): Remove a typecast with something slightly safer.
	(timer_run): Update to deal with new type of Generator.g_timer.
	(signal_add): Likewise.
	(socket_add): Likewise.
	
2007-03-28  Michael Poole <mdpoole@troilus.org>

	* ircd/m_asll.c (ms_asll): Count hits and report at the end, so
	that a client is told whether any match (and has a hint that only
	directly linked servers are checked).
	(mo_asll): Likewise.

2007-03-26  Michael Poole <mdpoole@troilus.org>

	* ircd/s_stats.c (m_stats): Move check for STAT_FLAG_LOCONLY (and
	the assignment to "param") to the hunted server.

2007-03-26  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (iauth_parse): Check for missing arguments when
	parsing the iauth message.

	* tests/bug-1685648.cmd: New file to test this.

	* tests/iauth-test: New file to exercise the code path.

	* tests/ircd.conf: Use the iauth-test helper program.

2007-03-26  Michael Poole <mdpoole@troilus.org>

	* ircd/m_silence.c (forward_silences): Do not try twice to process
	silences that were both added and deleted.

2007-03-26  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_parser.y (portblock): Restore old behavior for Port
	blocks with no host listed.

2007-03-26  Michael Poole <mdpoole@troilus.org>

	* doc/readme.iauth (iauth I): Fix example and syntax.

2007-03-18  Michael Poole <mdpoole@troilus.org>

	* acinclude.m4 (unet_NONBLOCKING): Properly quote function name.
	(unet_SIGNALS): Likewise.
	(unet_CHECK_TYPE_SIZES): Likewise.
	(AC_LIBRARY_NET): Likewise.

2007-03-18  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/m_gline.c (mo_gline): add permissions checks I kept
	forgetting to add--remote local modifications require
	FEAT_CONFIG_OPERCMDS and PRIV_GLINE, local G-lines require
	PRIV_LOCAL_GLINE, and global G-line changes (excluding local
	activation/deactivation) require FEAT_CONFIG_OPERCMDS and
	PRIV_GLINE

2007-03-17  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/s_err.c: update replies to handle new fields in
	RPL_STATSGLINE and RPL_GLIST--new fields indicate G-line lastmod,
	G-line lifetime, and local activation status

	* ircd/m_gline.c: update function documentation for ms_gline();
	move test for server to before mask processing; don't look up
	remote server too early; add code to process local activations and
	deactivations early in ms_gline(); implement adding and destroying
	local G-lines; don't try to locally activate or deactivate G-lines
	that don't exist; add code to keep track of which fields were
	available to ms_gline(); implement G-line modification and
	creation; remove old ms_gline() code; convert
	sendwallto_group_butone() calls to Debug() calls; reimplement
	mo_gline() to take into account new syntax

	* ircd/gline.c: change gl_rexpire to gl_lifetime to better reflect
	its meaning; make sure to set gl_state to GLOCAL_GLOBAL when
	G-line expires; add lifetime parameter to make_gline(); disable
	overlapping G-line check; initialize gl_lifetime from lifetime
	parameter; initialize gl_state to GLOCAL_GLOBAL; update
	gline_propagate() to send lifetime parameter; add lifetime
	parameter to gline_add(); remove some old code in gline_add();
	figure out lifetime to set on new G-line; remove test for
	make_gline() returning NULL, since it should never do so now; add
	modify_gline() for modifying global G-lines; add gline_destroy()
	for destroying local G-lines; update gline_burst() to send
	lifetime parameter; update gline_resend() to send lifetime
	parameter; update gline_list() to add lastmod, lifetime, and local
	status indicators; update gline_stats() to send lastmod, lifetime,
	and local status indicators; count BADCHANs in
	gline_memory_count()

	* include/gline.h: add enum GlineLocalState for keeping track of
	local state changes to global G-lines; store state in struct
	Gline; document enum GlineAction; add GLINE_EXPIRE,
	GLINE_LIFETIME, and GLINE_REASON flags to indicate the presence of
	those fields to gline_modify(); add GLINE_UPDATE mask for checking
	for the above flags; update GlineIsActive() to take into account
	new gl_state field in struct Gline; add lifetime to gline_add();
	add gline_modify() for modifying existing global G-lines, and
	gline_destroy() for destroying local G-lines

	* doc/readme.gline: update documentation to reflect changes made
	to G-line command syntax

2007-03-16  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/s_conf.c (find_kill): check FEAT_DISABLE_GLINES prior to
	checking for a G-line matching a new user

	* ircd/m_gline.c (ms_gline): rework ms_gline() to handle new
	command syntax--although it can parse the new syntax, it doesn't
	yet perform the actions demanded by that syntax

	* ircd/ircd_features.c: trap-door feature FEAT_DISABLE_GLINES to
	disable G-lines

	* ircd/gline.c: create gliter() macro which performs an iteration
	over all G-lines in a specified G-line list; initialize record
	expire in make_gline() (to be redone); check FEAT_DISABLE_GLINES
	in do_gline(); add and document what happens if GLINE_LOCAL is
	passed to gline_find()

	* include/ircd_features.h: trap-door feature FEAT_DISABLE_GLINES
	to disable G-lines; intended use: accidental G-line of *@*

	* include/gline.h: add rexpire (record expiration time) field to
	gline description structure; add GlineAction enumeration (still
	undocumented) to describe actions that may be performed on G-lines

2007-08-11  Michael Poole <mdpoole@troilus.org>

	* configure.ac: Remove AC_SYS_RESTARTABLE_SYSCALLS.

	* ircd/ircd_signal.c (setup_signals): Remove code for restartable
	syscalls.  Using sigaction() requires a flag to restart syscalls.

2007-04-10  Michael Poole <mdpoole@troilus.org>

	* test.l: #include <errno.h> since we use errno.

2007-03-17  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Port): Document the optional additional field
	for vhost entries.  Document the support for multiple vhost
	entries in a single Port block.

	* ircd/ircd_parser.y (USE_IPV4): Shift up by 16 bytes.
	(USE_IPV6): Likewise.
	(portblock): Iterate over hosts rather than using the single host.
	(portitem): Add portvhostnumber alternative production.
	(portnumber): Check port number here.  If valid, combine address
	family and port number in "port" variable.  If a port-less item
	exists in "hosts", set its port number.
	(portvhost): Prepend mask to "hosts" list.
	(portvhostnumber): New production.

2007-03-17  Michael Poole <mdpoole@troilus.org>

	* ircd/listener.c (add_listener): Only try to create IPv6 sockets
	for IPv6-compatible addresses; likewise for IPv4.

2007-03-17  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Operator): Update documentation to mention
	more than one host entry is allowed.
	(Motd): Likewise.

	* ircd/ircd_parser.y (hosts): New file-scope variable.
	(free_slist): New helper function.
	(operblock): Iterate over hosts instead of using the single host.
	(operhost): Prepend the mask to hosts.
	(motdblock): Iterate over hosts instead of using the single host.
	(motdhost): Prepend the mask to hosts.
	(motdfile): Fix possible leak of "pass" string (the filename).

	* ircd/s_conf.c (conf_parse_userhost): Stop freeing the host
	string; operblock (the only caller) frees it now.

2007-03-17  Michael Poole <mdpoole@troilus.org>

	* ircd/list.c (free_link): Only decrement the in-use count of
	links if we free a link.

2007-03-16  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Class): Move the "Recommended client classes"
	comment to a better place (and stop recommending them).  Clarify
	what maxlinks does.  Make it clear that Operator password entries
	only support umkpasswd formats.
	
2007-03-16  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd.c (parse_command_line): Emit a warning if using -x
	when DEBUGMODE is disabled.

2007-03-16  Michael Poole <mdpoole@troilus.org>

	* ircd/s_conf.c (find_conf_exact): Treat maxlinks == 0 as being
	unlimited here, to match attach_conf()'s behavior.

2007-03-05  Michael Poole <mdpoole@troilus.org>

	* ircd/m_privs.c (ms_privs): Use the correct source when
	forwarding the PRIVS request.

	* tests/bug-1674539.cmd: New file to test for this.

	* tests/test-driver.pl: Recognize "oper" command from scripts.

2007-03-05  Michael Poole <mdpoole@troilus.org>

	* tests/ircd.conf: Make into a hub.

	* tests/ircd-2.conf: New file, for a second server.

	* tests/ircd-3.conf: Configuration for a third server.

2007-03-04  Michael Poole <mdpoole@troilus.org>

	* ircd/gline.c (count_users): Fix length of ipbuf.  (Spotted by
	paulr.)

2007-02-28  Michael Poole <mdpoole@troilus.org>

	* ircd/os_generic.c (sockaddr_from_irc): Zero out socket address
	before setting family, and regardless of whether we have an
	irc_sockaddr template.

2007-02-25  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Document new options for General block.
	
	* include/res.h (clear_nameservers): Declare new function.
	(add_nameserver): Declare previously static function.

	* include/s_bsd.h (VirtualHost_dns_v4): Declare.
	(VirtualHost_dns_v6): Likewise.

	* ircd/ircd_lexer.l (DNS): Recognize new token.

	* ircd/ircd_parser.y (DNS): Declare new token.
	(generalitem): Allow new items for dns vhost(s) and dns servers.
	(generaldnsvhost): New production.
	(generaldnsserver): New production.

	* ircd/ircd_res.c (VirtualHost_dns_v4): New variable.
	(VirtualHost_dns_v6): Likewise.
	(clear_nameservers): New function.
	(restart_resolver): Scan specified servers so we only try to open
	DNS client sockets that we need.

	* ircd/ircd_reslib.c (irc_nscount): Remove redundant initializer.
	(irc_res_init): Only read the resolver config file if there are no
	nameservers provided.
	(add_nameserver): Make non-static.  Remove off-by-one check
	against IRCD_MAXNS.

	* ircd/s_conf.c (read_configuration_file): Clear nameserver list
	before reading the config file.

2007-01-27  Jeannot Langlois <jeannot12@linuxmail.org>

	* doc/example.conf (Features): Illustrate URLREG feature.

	* doc/readme.features (URLREG): Define new feature.

	* include/ircd_features.h (Feature): Add FEAT_URLREG.

	* ircd/ircd_features.c (features): Set the default value.

	* ircd/m_join.c (m_join): For ERR_NEEDREGGEDNICK, include the
	URLREG value as a format argument.

	* ircd/s_err.c (replyTable): Update ERR_NEEDREGGEDNICK
	appropriately.

2007-02-03  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_reply.c (protocol_violation): Avoid reusing the
	va_list in vd.

	* ircd/send.c (sendcmdto_channel): Warn against using %v in the
	pattern -- that will cause incorrect behavior.
	(sendwallto_group): Likewise.
	(sendcmdto_match): Likewise.

2007-01-22  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (find_delayed_joins): Fix to use sendto_channel()
	properly for CVS HEAD.

2007-01-22  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (find_delayed_joins): New function.
	(modebuf_flush): Handle +D-D and related cases.
	(mode_parse_mode): It is too early to handle +D here, so don't.
	(CheckDelayedJoins): Use find_delayed_joins().

2007-01-22  Michael Poole <mdpoole@troilus.org>

	* tests: New subdirectory for test framework.

	* tests/ircd.conf: Helper file for testing.

	* tests/readme.txt: Simple documentation of test framework.

	* tests/test-driver.pl: Testing script interpreter.

2007-01-22  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Fix potentially confusing comment about ip
	mask syntax.

2007-01-22  Michael Poole <mdpoole@troilus.org>

	* INSTALL: Mention source directory naming; update the reference
	to the config file converter (hah); update CVS directions.

2007-01-22  Michael Poole <mdpoole@troilus.org>

	* include/supported.h: Move parameters from FEATURES1 to FEATURES2
	so that neither ISUPPORT line has more than 15 parameters.  (Some
	clients are picky about this.)

2007-01-15  Michael Poole <mdpoole@troilus.org>

	* doc/readme.iauth (U): Document extended fields.

	* include/s_auth.h (auth_set_user): Declare new parameters.

	* ircd/m_user.c (m_user): Pass new parameters.

	* ircd/s_auth.c (auth_set_user): Accept new parameters.  When
	using Undernet extensions, forward them to the iauth process.

2007-01-14  Michael Poole <mdpoole@troilus.org>

	* ircd/os_generic.c (os_recv_nonb): Set errno to zero when
	returning IO_FAILURE due to a closed connection.

2006-12-31  Michael Poole <mdpoole@troilus.org>

	* ircd/s_user.c (set_nick_name): Only use actual account name in
	the fakehost, not account name plus suffix.

2006-12-31  Michael Poole <mdpoole@troilus.org>

	* ircd/m_mode.c (ms_mode): Bounce modes from deopped members.

2006-12-30  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_string.c (ircd_strncpy): Make sure the output buffer
	is terminated.  We don't rely on the arguable strncpy semantics.

2006-12-30  Michael Poole <mdpoole@troilus.org>

	* include/struct.h (struct Server): Add asll_last field.

	* ircd/ircd.c (check_pings): Add check for asll_last.  When a
	server doesn't ping, use an old-style ping rather than AsLL ping.

	* ircd/m_pong.c (ms_pong): Use ClearPingSent() rather than
	ClrFlag().  Set asll_last to current time.
	(mr_pong): Use ClearPingSent() rather than ClrFlag().
	(m_pong): Likewise.

	* ircd/s_bsd.c (completed_connection): Likewise.
	(read_packet): Likewise.  Update cli_lasttime for servers in
	addition to clients.

2006-12-07  Michael Poole <mdpoole@troilus.org>

	* ircd/flagset.h: New file.

	* ircd/capab.h: #include "flagset.h" rather than "client.h"

	* include/client.h: Move flagset definitions to flagset.h.
	Include that file.

	* include/listener.h: #include "flagset.h" rather than "client.h"

2006-12-07  Michael Poole <mdpoole@troilus.org>

	* ircd/crule.c (crule_free): Move decrement so that MyFree() may
	continue to evaluate its argument twice (bleh).
	(crule_cat): Properly set terminal byte for compound expressions.
	
	* ircd/ircd_lexer.l (init_lexer): Remove extraneous yy_init = 1.
	(<<EOF>>): Add yy_init = 0; to force flex to re-init on rehash.

2006-12-07  Michael Poole <mdpoole@troilus.org>

	* ircd/listener.c (show_ports): Update to show '4' and/or '6' as
	flags in response, with a '-' suffix if either one fails to open.

2006-12-07  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Port): Document the method to select IPv4 or
	IPv6 restriction for a port.

	* include/listener.h (LISTEN_IPV4): New listener flag.
	(LISTEN_IPV6): New listener flag.
	(struct Listener): Split 'fd' and 'socket' fields into two each.

	* ircd/ircd_lexer.l (ipv4): New token.
	(ipv6): Likewise.

	* ircd/ircd_parser.y (USE_IPV4): New macro.
	(USE_IPV6): Likewise.
	(TOK_IPV4): New token.
	(TOK_IPV6): Likewise.
	(address_family): New non-terminal rule.
	(portblock): Default to listening on both IPv4 and IPv6.
	(portnumber): Add address_family element and use it.
	(portvhost): Likewise.

	* ircd/listener.c (make_listener): Adjust for newly split fields
	in struct Listener.
	(inetport): Likewise.  Adjust return value as well.
	(add_listener): Update to handle both IPv4 and IPV6 support.
	(close_listener): Likewise.
	(accept_connection): Because each listener has two sockets, it is
	no longer safe to free the listener when one is destroyed -- so
	don't.  Also accept() on the file descriptor from the incoming
	event rather than on a fixed fd.

	* ircd/os_generic.c (os_socket): For platforms with IPV6_V6ONLY,
	enable it for AF_INET6 sockets rather than disabling it for
	unspecified sockets.

2006-12-06  Michael Poole <mdpoole@troilus.org>

	* include/listener.h (enum ListenerFlag): New enum.
	(struct Listener): Convert "active", "hidden" and "server" to a
	flagset.
	(add_listener): Convert "is_server" and "is_hidden" arguments to
	use the same flagset structure.

	* ircd/ircd_parser.y (listen_flags): New variable.
	(general_vhost): Consolidate references to $3 to use a variable.
	(portblock): Use listen_flags instead of tconn and tping.
	(portserver): Likewise.
	(porthidden): Likewise.

	* ircd/listener.c (show_ports): Use new field in Listener.
	(set_listener_options): New function.
	(inetport): Use it.
	(add_listener): Use new field in Listener.  When reusing an extant
	listener, call set_listener_options() so the options are updated.
	(mark_listeners_closing): Use new field in Listener.
	(close_listeners): Use new helper macro to check activeness.
	(release_listener): Likewise.
	(accept_connection): Likewise.

	* ircd/s_bsd.c (report_error): Use the standard snotice rate
	limiting here.
	(add_connection): Use new helper macro to check serverness.

2006-11-04  Michael Poole <mdpoole@troilus.org>

	* ircd/m_nick.c (m_nick): If we get NICK on a server port, tell
	the client to go away.

2006-11-04  Michael Poole <mdpoole@troilus.org>

	* ircd/version.c.SH: Skip version.c.

2006-11-04  Michael Poole <mdpoole@troilus.org>

	* doc/readme.who: Document new 'o' field flag.

	* ircd/channel.c (send_channel_modes): Rename feat_oplevels to
	send_oplevels and determine it automatically.
	(modebuf_flush_int): Pass along oplevel if it's less than
	MAXOPLEVEL.
	(mode_process_clients): Allow oplevels to be inherited for -A
	channels.  Inherit the opper's oplevel if >= MAXOPLEVEL.

	* ircd/m_who.c (WHO_FIELD_OPL): New flag.
	(do_who): Send oplevel for WHO_FIELD_OPL, but only show up to the
	requester's own oplevel.
	(m_who): Recognize 'o' flag as WHO_FIELD_OPL.

2006-10-21  Michael Poole <mdpoole@troilus.org>

	* ircd/convert-conf.c (finish_connects): Fix error display for
	missing C: lines when an H: line is present.

2006-10-21  Michael Poole <mdpoole@troilus.org>

	* ircd/engine_kqueue.c (set_or_clear): Explain in comment why
	udata can't be used.
	(engine_delete): Remove unused dellist[] variable and explain
	why we do not explicitly unregister the fd from kevent.

2006-08-06  Michael Poole <mdpoole@troilus.org>

	* ircd/m_list.c (param_parse): Ignore 's' and 'S' in the
	DEFAULT_LIST_PARAM setting. (Bug #1534814)

2006-08-02  Michael Poole <mdpoole@troilus.org>

	* include/msgq.h (MsgQList): Add 'sent' field.

	* ircd/msgq.c (Msg): Remove 'sent' field.
	(msgq_delmsg): Update for new position of 'sent'.
	(msgq_delete): Likewise.
	(msgq_mapiov): Likewise.
	(msgq_add): msg->sent went away; do not set it.

2006-08-02  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_parser.y (connectblock): Check for too-long password.
	(operblock): Comment why we don't check password length.  Move
	PRIV_PROPAGATE test earlier (so a buggy edit, rehash, /oper will
	not crash).
	(clientblock): Check for too-long password.

2006-07-27  Michael Poole <mdpoole@troilus.org>

	* ircd/send.c (sendcmdto_channels): Do not build serv_mb for local
	channels.  Use serv_mb to decide whether to skip remote members.

2006-07-27  Michael Poole <mdpoole@troilus.org>

	* doc/readme.iauth: Clarify compatibility for the ircd U message's
	<userinfo> field.

2006-07-26  Michael Poole <mdpoole@troilus.org>

	* ircd/send.c (match_it): Add parameters to allow IP matching.
	(sendcmdto_match): Try to parse 'to' to get an IP mask.  Move the
	cli_sentalong() test  first (avoiding most match_it() calls).

2006-07-26  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd.c (check_pings): Send AsLL pings as high priority.

	* ircd/m_ping.c (mo_ping): Forward PINGs with high priority.
	(ms_ping): Likewise.  Send PONG replies with high priority too.

	* ircd/m_pong.c (ms_pong): Forward PONGs with high priority.

2006-07-25  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (CRule): Update documentation.

	* doc/readme.crules: Update documentation.

	* include/crule.h (crule_free): Remove a level of indirection.
	(crule_parse): Remove declaration.
	(crule_text): New function.
	(crule_make_and): New function.
	(crule_make_or): New function.
	(crule_make_not): New function.
	(crule_make_connected): New function.
	(crule_make_directcon): New function.
	(crule_make_via): New function.
	(crule_make_directop): New function.

	* ircd/crule.c: Rewrite.

	* ircd/ircd_lexer.l: Recognize new tokens &&, ||, CONNECTED,
	DIRECTCON, DIRECTOP, VIA.

	* ircd/ircd_parser.y: Declare the new tokens.
	(optall): New production with type <num>.
	(crule_expr): New production with type <crule>.
	(%union): Add new member to expression type union.
	(cruleblock): Rewrite to not use {} and to use optall, crule_expr.

	* ircd/s_conf.c (conf_erase_crule_list): Remove a level of
	indirection for crule_free().

2006-07-24  Michael Poole <mdpoole@troilus.org>

	* include/client.h (cli_uworld): New macro.

	* include/s_conf.h (CONF_UWORLD): Delete.
	(update_uworld_flags): New function.
	(conf_make_uworld): New function.
	(stats_uworld): New function.

	* include/struct.h (struct Server): Add new "flags" field.
	(SFLAG_UWORLD): New macro.

	* ircd/ircd_parser.y (uworldname): Use conf_make_uworld().
	(uworldblock): New production, using conf_make_uworld().

	* ircd/m_gline.c (ms_gline): Use cli_uworld() to check UWorld status.

	* ircd/m_mode.c (ms_mode): Use cli_uworld() to check UWorld status.

	* ircd/m_server.c (check_loop_and_lh): Remove redundant UWorld check.
	(mr_server): Use update_uworld_flags() to update a server's UWorld status.
	(ms_server): Likewise.

	* ircd/s_conf.c (uworlds): New static variable.
	(attach_conf_uworld): Delete function.
	(update_uworld_flags): New function.
	(conf_erase_uworld_list): New function.
	(conf_make_uworld): New function.
	(stats_uworld): New function.
	(rehash): Call conf_erase_uworld_list().  Remove CONF_UWORLD
	reference.  Call update_uworld_flags(&me) after rehash.

	* ircd/s_serv.c (server_estab): Remove CONF_UWORLD reference.

	* ircd/s_stats.c (statsinfo): Point /stats U to stats_uworld().
	(stats_configured_links): Remove CONF_UWORLD handling.

2006-07-24  Michael Poole <mdpoole@troilus.org>

	* ircd/umkpasswd.c (parse_arguments): Exit rather than abort when
	encountering an invalid argument.
	(main): Exit rather than abort when not given a mechanism.

2006-07-24  Michael Poole <mdpoole@troilus.org>

	* include/motd.h (motd_init): Split into two functions.

	* ircd/ircd_features.c (FEAT_NOINIT): Delete.
	(features): Remove FEAT_NOINIT from remote motd filename.
	(feature_init): Remove FEAT_NOINIT check.

	* ircd/motd.c (motd_init): Split into two functions.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* include/channel.h (struct Invite): New structure.
	(struct Channel): Change type of invites field.
	(IsInvited): Rename to is_invited; change return type.
	(add_invite): Declare function.

	* include/send.h (SKIP_LOCALS): Remove definition.

	* include/struct.h (struct Invite): Declare
	(struct User): Change type of invited field; remove invites.

	* ircd/channel.c (sub1_from_channel): Use mode_invite_clear() to
	clear the channel's invite list.
	(destruct_channel): Likewise.
	(IsInvited): Rename to is_invited and rework significantly.
	(invite_freelist): New file-scope variable.
	(add_invite): Rewrite function.
	(del_invite): Rewrite function.
	(mode_invite_clear): Adapt to new struct Invite.

	* ircd/m_invite.c (list_length): Delete function.
	(add_invite): Delete function (it moved to channel.c).
	(m_invite): Adapt to new struct Invite and add_invite().  Remove
	old ANNOUNCE_INVITES handling.
	(ms_invite): Adapt to new add_invite().  Remove old
	ANNOUNCE_INVITES handling.

	* ircd/m_join.c (m_join): Add new ANNOUNCE_INVITES handling.

	* ircd/s_debug.c (count_memory): Adapt to new struct Invite.

	* ircd/s_misc.c (exit_one_client): Adapt to new struct Invite.

	* ircd/s_user.c (check_target_limit): Rename IsInvited().

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* include/msg.h (CMD_WALLCHOPS): Change to what is actually used.
	(CMD_WALLVOICES): Likewise.

	* ircd/m_wallvoices.c (ms_wallvoices): Add missing "+ ".

	* ircd/s_numeric.c (do_numeric): Document slightly irregular
	parv[2].  Allow parv[1] to be of the form @#channel.

	* ircd/send.c (sendcmdto_channel): Do not override "cmd" for local
	sends.  Do not build serv_mb if servers are skipped.  Remove the
	SKIP_LOCALS handling, which is about to become unused.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* include/s_user.h (del_isupport): Declare.

	* ircd/engine_select.c (engine_loop): Fix type of codesize
	variable.

	* ircd/ircd_parser.y (lexer_include): Declare.
	(sconf): Delete.
	(yylineno): Undeclare.

	* ircd/ircd_reslib.c (irc_ns_get32): Delete.
	(irc_ns_put16): Delete.
	(irc_ns_put32): Delete.

	* ircd/m_motd.c (ms_motd): Export symbol.

	* ircd/match.c (matchdecomp): Disable via #if.
	(mmexec): Likewise.

	* ircd/s_user.c (del_isupport): Export symbol.

	* ircd/uping.c (uping_begin): Delete.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Features): Show NOIDENT example.

	* doc/readme.features (NOIDENT): Document new feature setting.

	* include/ircd_features.h (NOIDENT): Declare new feature.

	* ircd/ircd_features.c (NOIDENT): Define new feature.

	* ircd/s_auth.c (start_auth): Check NOIDENT before starting auth
	request.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* include/querycmds.h (Count_unknownbecomesclient): Remove _butone
	qualifier for send functions.

	* include/send.h (sendcmdto_flag_serv_butone): Likewise.
	(sendcmdto_serv_butone): Likewise.
	(sendcmdto_common_channels_butone): Likewise.
	(sendcmdto_channel_butserv_butone): Make a special case of
	sendcmdto_channel().
	(sendcmdto_channel_servers_butone): Likewise.
	(sendcmdto_channel_butone): Remove _butone qualifier.
	(SKIP_SERVERS): New flag.
	(SKIP_LOCALS): New flag.
	(sendwallto_group_butone): Remove _butone qualifier.
	(sendcmdto_match_butone): Likewise.
	(sendto_opmask_butone): Likewise.
	(sendto_opmask_butone_ratelimited): Remove _butone qualifier.

	* ircd/channel.c (CheckDelayedJoins): Replace _butserv qualfier
	with SKIP_SERVERS flag; remove _butone qualifier.
	(RevealDelayedJoin): Likewise.
	(modebuf_flush_int): Likewise.
	(mode_process_clients): Likewise.
	(joinbuf_join): Likewise.
	(joinbuf_flush): Likewise.
	(check_spambot_warning): Likewise.

	* ircd/destruct_event.c (exec_expired_destruct_events): Remove
	_butone qualifier.

	* ircd/gline.c (do_gline): Remove _butone qualifier.
	(gline_propagate): Likewise.
	(gline_add): Likewise.
	(gline_activate): Likewise.
	(gline_deactivate): Likewise.

	* ircd/ircd.c (server_restart): Remove _butone qualifier.
	(try_connections): Likewise.
	(check_pings): Likewise.

	* ircd/ircd_log.c (log_vwrite): Remove _butone qualifier.

	* ircd/ircd_relay.c (relay_channel_message): Remove _butone
	qualifier.
	(relay_channel_notice): Likewise.
	(server_relay_channel_message): Likewise.
	(server_relay_channel_notice): Likewise.
	(relay_masked_message): Likewise.
	(relay_masked_notice): Likewise.
	(server_relay_masked_message): Likewise.
	(server_relay_masked_notice): Likewise.

	* ircd/ircd_reply.c (protocol_violation): Remove _butone
	qualifier.

	* ircd/jupe.c (propagate_jupe): Remove _butone qualifier.
	(jupe_add): Likewise.
	(jupe_activate): Likewise.
	(jupe_deactivate): Likewise.

	* ircd/listener.c (accept_connection): Remove _butone qualifier.

	* ircd/m_account.c (ms_account): Remove _butone qualifier.

	* ircd/m_away.c (m_away): Remove _butone qualifier.
	(ms_away): Likewise.

	* ircd/m_burst.c (ms_burst): Remove _butone qualifier.

	* ircd/m_clearmode.c (m_clearmode): Remove _butone qualifier.

	* ircd/m_connect.c (ms_connect): Remove _butone qualifier.

	* ircd/m_create.c (ms_create): Remove _butone qualifier.

	* ircd/m_destruct.c (ms_destruct): Remove _butone qualifier.

	* ircd/m_desynch.c (ms_desynch): Remove _butone qualifier.

	* ircd/m_endburst.c (ms_end_of_burst): Remove _butone qualifier.
	(ms_end_of_burst_ack): Likewise.

	* ircd/m_error.c (mr_error): Remove _butone qualifier.
	(ms_error): Likewise.

	* ircd/m_gline.c (ms_gline): Remove _butone qualifier.

	* ircd/m_invite.c (m_invite): Replace _butserv qualfier with
	SKIP_SERVERS flag and _servers qualifier with SKIP_LOCALS flag;
	remove _butone qualifier.
	(ms_invite): Likewise.

	* ircd/m_join.c (m_join): Remove _butone qualifier.

	* ircd/m_kick.c (m_kick): Remove _butone qualifier.  Replace
	_butserv qualifier with SKIP_SERVERS flag.
	(ms_kick): Likewise.

	* ircd/m_kill.c (do_kill): Remove _butone qualifier.

	* ircd/m_nick.c (ms_nick): Remove _butone qualifier.

	* ircd/m_oper.c (m_oper): Remove _butone qualifier.
	(ms_oper): Likewise.

	* ircd/m_rehash.c (mo_rehash): Remove _butone qualifier.

	* ircd/m_server.c (check_loop_and_lh): Remove _butone qualifier.
	(check_start_timestamp): Likewise.
	(mr_server): Likewise.
	(ms_server): Likewise.

	* ircd/m_settime.c (ms_settime): Remove _butone qualifier.
	(mo_settime): Likewise.

	* ircd/m_silence.c (forward_silences): Remove _butone qualifier.

	* ircd/m_topic.c (do_settopic): Remove _butone qualifier.  Replace
	_butserv qualifier with SKIP_SERVERS flag.

	* ircd/m_wallchops.c (m_wallchops): Remove _butone qualifier.
	(ms_wallchops): Likewise.

	* ircd/m_wallops.c (ms_wallops): Remove _butone qualifier.
	(mo_wallchops): Likewise.

	* ircd/m_wallusers.c (ms_wallusers): Remove _butone qualifier.
	(mo_wallusers): Likewise.

	* ircd/m_wallvoices.c (m_wallvoices): Remove _butone qualifier.
	(ms_wallvoices): Likewise.

	* ircd/memdebug.c (dbg_memory_leaked): Remove _butone qualifier.

	* ircd/s_auth.c (preregister_user): Remove _butone qualifier.
	(auth_dns_callback): Likewise.
	(iauth_do_spawn): Likewise.
	(iauth_cmd_snotice): Likewise.
	(iauth_cmd_debuglevel): Likewise.
	(iauth_cmd_policy): Likewise.
	(iauth_cmd_version): Likewise.
	(iauth_cmd_newconfig): Likewise.
	(iauth_cmd_newstats): Likewise.
	(auth_find_class_conf): Likewise.
	(iauth_cmd_done_client): Likewise.
	(iauth_read): Likewise.
	(iauth_read_stderr): Likewise.

	* ircd/s_bsd.c (report_error): Remove _butone qualifier.
	(connect_dns_callback): Likewise.
	(completed_connection): Likewise.
	(connect_server): Likewise.

	* ircd/s_conf.c (yyerror): Remove _butone qualifier.
	(yywarning): Likewise.
	(rehash): Likewise.
	(conf_check_server): Likewise.

	* ircd/s_misc.c (exit_one_client): Remove _butone qualifier.
	(exit_client): Likewise.

	* ircd/s_numeric.c (do_numeric): Remove _butone qualifier.

	* ircd/s_serv.c (server_estab): Remove _butone qualifier.

	* ircd/s_user.c (register_user): Remove _butone qualifier.
	(set_nick_name): Likewise.
	(hide_hostmask): Likewise.
	(set_user_mode): Likewise.
	(set_snomask): Likewise.

	* ircd/send.c (vsendto_opmask_butone): Remove _butone qualifier.
	(dead_link): Likewise.
	(send_buffer): Likewise.
	(sendcmdto_flag_serv_butone): Likewise.  Optimize "one" test.
	(sendcmdto_serv_butone): Likewise.
	(sendcmdto_common_channels_butone): Remove _butone qualifier.
	(sendcmdto_channel_butserv_butone): Delete function.
	(sendcmdto_channel_servers_butone): Likewise.
	(sendcmdto_channel_butone): Remove _butone qualifier.  Move
	sentalong test to front of list.  Add SKIP_SERVERS and SKIP_LOCALS
	tests.
	(sendwallto_group_butone): Remove _butone qualifier.
	(sendcmdto_match_butone): Likewise.
	(sendto_opmask_butone): Likewise.
	(sendto_opmask_butone_ratelimited): Likewise.
	(vsendto_opmask_butone): Likewise.

	* ircd/umkpasswd.c (sendto_opmask): Remove _butone qualifier.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_events.c (event_generate): Separate into threaded and
	non-threaded versions.
	(event_execute): Move into IRCD_THREADED section.
	(event_add): Likewise.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* ircd/s_bsd.c (close_connection): Clear FREEFLAG_SOCKET when
	closing the socket.
	(client_sock_callback): Fix typo in a comment.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (check_spambot_warning): Avoid division by zero;
	bug pointed out by comstud.

2006-07-23  Michael Poole <mdpoole@troilus.org>

	* ircd/s_user.c (get_clean_isupport): Only initialize is_next the
	first time around (otherwise entries get lost).

2006-07-14  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Features): Show the four added features.

	* doc/readme.features (USER_GLIST): Fix indentation of headers.
	(SPAM_OPER_COUNTDOWN): Document new feature.
	(SPAM_EXPIRE_TIME): Likewise.
	(SPAM_JOINED_TIME): Likewise.
	(SPAM_FJP_COUNT): Likewise.

	* include/channel.h (Ban): Fix typo in comment.
	(check_spambot_warning): Declare new function.

	* include/client.h (Connection): New fields for spambot detection.
	(cli_last_join): New helper macro.
	(cli_last_part): New helper macro.
	(cli_join_part_count): New helper macro.
	(cli_warn_countdown): New helper macro.

	* include/ircd_features.h (FEAT_SPAM_OPER_COUNTDOWN): New feature.
	(FEAT_SPAM_EXPIRE_TIME): Likewise.
	(FEAT_SPAM_JOINED_TIME): Likewise.
	(FEAT_SPAM_FJP_COUNT): Likewise.

	* ircd/channel.c (check_spambot_warning): New function.

	* ircd/ircd_features.c (SPAM_OPER_COUNTDOWN): Define new feature.
	(SPAM_EXPIRE_TIME): Likewise.
	(SPAM_JOINED_TIME): Likewise.
	(SPAM_FJP_COUNT): Likewise.

	* ircd/m_join.c (m_join): Update last-join time at each join.

	* ircd/m_part.c (m_part): Check spambot behavior at each part.

2006-07-14  Michael Poole <mdpoole@troilus.org>

	* include/ircd_snprintf.h: Escape %, #, < and > with \.

	* ircd/ircd_events.c (sigInfo): Name the struct type.
	(evInfo): Likewise.

	* ircd/ircd_log.c (facilities): Likewise.
	(masks): Likewise.
	(logInfo): Likewise.

	* ircd/ircd_res.c (make_request): Update doxygen parameters list.
	(gethost_byname): Likewise.
	(gethost_byaddr): Likewise.
	(do_query_name): Likewise.
	(do_query_number): Likewise.

	* ircd/m_burst.c (ms_burst): Escape %, < and > with \.

	* ircd/m_lusers.c (m_lusers): Fix ordering of \li and \a.
	(ms_lusers): Likewise.

	* ircd/m_map.c (m_map): Delete stray \.

	* ircd/m_motd.c (m_motd): Fix ordering of \li and \a.
	(ms_motd): Likewise.

	* ircd/m_oper.c (ms_oper): Escape < and > with \.

	* ircd/m_rping.c (mo_rping): Likewise.

	* ircd/motd.c (MotdList): Name the struct type.

	* ircd/msgq.c (MQData): Likewise.

	* ircd/os_generic.c (sockaddr_from_irc): Add doxygen comment for
	argument 'family'.

	* ircd/s_auth.c (HeaderMessages): Name the struct type.

	* ircd/s_bsd.c (connect_dns_callback): Update doxygen parameters list.

	* ircd/s_conf.c (conf_dns_callback): Likewise.
	(free_mapping): Move '[in]' before the name of the parameter it
	modifies.

	* ircd/whowas.c (wwList): Name the struct type.
	(m_whowas): Escape $, < and > with \.

2006-07-14  Michael Poole <mdpoole@troilus.org>

	* ircd/m_wallchops.c (m_functions): Delete duplicative comment.
	(m_wallchops): Write doxygen comment.
	(ms_wallchops): Write doxygen comment.

	* ircd/m_wallops.c (m_functions): Delete duplicative comment.
	(ms_wallops): Write doxygen comment.  Change parv[1] to
	parv[parc-1].
	(mo_wallops): Write doxygen comment.  Change parv[1] to
	parv[parc-1].

	* ircd/m_wallusers.c (m_functions): Delete duplicative comment.
	(ms_wallusers): Write doxygen comment.  Change parv[1] to
	parv[parc-1].
	(mo_wallusers): Write doxygen comment.  Change parv[1] to
	parv[parc-1].

	* ircd/m_wallvoices.c (m_functions): Delete duplicative comment.
	(m_wallvoices): Write doxygen comment.
	(ms_wallvoices): Write doxygen comment.

	* ircd/m_whois.c (m_functions): Delete duplicative comment.
	(do_whois): Convert comment to doxygen format and elaborate.
	(do_wilds): Convert comment to doxygen format and elaborate.
	(m_whois): Write doxygen comment.
	(ms_whois): Write doxygen comment.

	* ircd/m_whowas.c (m_functions): Delete duplicative comment.
	(m_whowas): Convert comment to doxygen format.

2006-07-14  Michael Poole <mdpoole@troilus.org>

	* ircd/m_time.c (m_functions): Delete duplicative comment.
	(m_time): Write doxygen comment.

	* ircd/m_tmpl.c (m_functions): Delete duplicative comment.
	(m_tmpl): Write doxygen comment.
	(ms_tmpl): Write doxygen comment.
	(mo_tmpl): Write doxygen comment.
	(mv_tmpl): Write doxygen comment.
	(mr_tmpl): New function.

	* ircd/m_uping.c (m_functions): Delete duplicative comment.
	(ms_uping): Write doxygen comment.
	(mo_uping): Write doxygen comment.

	* ircd/m_user.c (m_functions): Delete duplicative comment.
	(m_user): Write doxygen comment.  Change parv[4] to parv[parc-1].

	* ircd/m_userhost.c (m_functions): Delete duplicative comment.
	(userhost_formatter): Write doxygen comment.
	(m_userhost): Write doxygen comment.

	* ircd/m_userip.c (m_functions): Delete duplicative comment.
	(userip_formatter): Write doxygen comment.
	(m_userip): Write doxygen comment.

	* ircd/m_version.c (m_functions): Delete duplicative comment.
	(m_version): Write doxygen comment.
	(mo_version): Write doxygen comment.
	(ms_version): Write doxygen comment.

2006-07-12  Michael Poole <mdpoole@troilus.org>

	* ircd/m_set.c (m_functions): Delete duplicative comment.
	(mo_set): Write doxygen comment.

	* ircd/m_settime.c (m_functions): Delete duplicative comment.
	(ms_settime): Write doxygen comment.
	(mo_settime): Write doxygen comment.

	* ircd/m_squit.c (ms_squit): Write doxygen comment.
	(mo_squit): Write doxygen comment.

	* ircd/m_stats.c (m_functions): Delete duplicative comment.
	(m_stats): Write doxygen comment.

2006-07-05  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (auth_freelist): New static variable.
	(check_auth_finished): Move call to destroy_auth_request().
	(destroy_auth_request): Prepend auth request to freelist.
	(start_auth): Use struct from auth freelist if possible.

2006-07-04  Michael Poole <mdpoole@troilus.org>

	* ircd/m_quit.c (m_functions): Delete duplicative comment.
	(m_quit): Write doxygen comment.
	(ms_quit): Write doxygen comment.

	* ircd/m_rehash.c (m_functions): Delete duplicative comment.
	(mo_rehash): Write doxygen comment.

	* ircd/m_reset.c (m_functions): Delete duplicative comment.
	(mo_reset): Write doxygen comment.

	* ircd/m_restart.c (m_functions): Delete duplicative comment.
	(mo_restart): Write doxygen comment.

	* ircd/m_rping.c (m_functions): Delete duplicative comment.
	(ms_rping): Write doxygen comment.
	(mo_rping): Write doxygen comment.

	* ircd/m_rpong.c (m_functions): Delete duplicative comment.
	(mo_rpong): Write doxygen comment.

2006-07-04  Michael Poole <mdpoole@troilus.org>

	* ircd/m_part.c (m_functions): Delete duplicative comment.
	(m_part): Write doxygen comment.
	(ms_part): Write doxygen comment.

	* ircd/m_pass.c (m_functions): Delete duplicative comment.
	(mr_pass): Write doxygen comment.

	* ircd/m_ping.c (m_functions): Delete duplicative comment.
	(m_ping): Write doxygen comment.
	(mo_ping): Write doxygen comment.
	(ms_ping): Write doxygen comment.

	* ircd/m_pong.c (m_functions): Delete duplicative comment.
	(ms_pong): Write doxygen comment.
	(mr_pong): Write doxygen comment.
	(m_pong): Write doxygen comment.

	* ircd/m_privmsg.c (m_functions): Delete duplicative comment.
	(m_privmsg): Write doxygen comment.
	(ms_privmsg): Write doxygen comment.
	(mo_privmsg): Write doxygen comment.

	* ircd/m_pseudo.c (m_functions): Delete duplicative comment.
	(m_pseudo): Write doxygen comment.

2006-07-04  Michael Poole <mdpoole@troilus.org>

	* ircd/m_links.c (m_functions): Delete duplicative comment.
	(m_links): Write doxygen comment.
	(ms_links): Write doxygen comment.

	* ircd/m_list.c (m_functions): Delete duplicative comment.
	(show_usage): Write doxygen comment.
	(param_parse): Write doxygen comment.
	(list_set_default): Write doxygen comment.
	(m_list): Write doxygen comment.

	* ircd/m_lusers.c (m_functions): Delete duplicative comment.
	(m_lusers): Write doxygen comment.
	(ms_lusers): Write doxygen comment.

	* ircd/m_map.c (m_functions): Delete duplicative comment.
	(dump_map): Write doxygen comment.
	(m_map): Write doxygen comment.

	* ircd/m_mode.c (m_functions): Delete duplicative comment.
	(m_mode): Write doxygen comment.
	(ms_mode): Write doxygen comment.

	* ircd/m_motd.c (m_functions): Delete duplicative comment.
	(m_motd): Convert comment to doxygen format.
	(ms_motd): Convert comment to doxygen format.

	* ircd/m_names.c (m_functions): Delete duplicative comment.
	(do_names): Convert comment to doxygen format.
	(m_names): Write doxygen comment.
	(ms_names): Write doxygen comment.

	* ircd/m_nick.c (m_functions): Delete duplicative comment.
	(do_nick_name): Convert comment to doxygen format.
	(m_nick): Write doxygen comment.
	(ms_nick): Write doxygen comment.

	* ircd/m_notice.c (m_functions): Delete duplicative comment.
	(m_notice): Write doxygen comment.
	(ms_notice): Write doxygen comment.
	(mo_notice): Write doxygen comment.

	* ircd/m_oper.c (m_functions): Delete duplicative comment.
	(oper_password_match): Write doxygen comment.
	(m_oper): Write doxygen comment.
	(ms_oper): Write doxygen comment.
	(mo_oper): Write doxygen comment.

	* ircd/m_opmode.c (m_functions): Delete duplicative comment.
	(ms_opmode): Write doxygen comment.
	(mo_opmode): Write doxygen comment.

2006-06-30  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_parser.y (iauth*): Avoid leaking program name string.

2006-06-30  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (check_auth_finished): Free auth structure when
	done with it.
	(sendto_iauth): Free message buffer when done with it.

2006-06-30  Michael Poole <mdpoole@troilus.org>

	* ircd/m_info.c (m_functions): Delete duplicative comment.
	(m_info): Write doxygen comment.
	(ms_info): Write doxygen comment.
	(mo_info): Write doxygen comment.

	* ircd/m_invite.c (m_functions): Delete duplicative comment.
	(m_invite): Convert comment to doxygen format.
	(ms_invite): Convert comment to doxygen format.

	* ircd/m_ison.c (m_functions): Delete duplicative comment.
	(m_ison): Convert comment to doxygen format.

	* ircd/m_jupe.c (m_functions): Delete duplicative comment.
	(ms_jupe): Write doxygen comment.  Fix parv[parc-1] usage.
	(mo_jupe): Write doxygen comment.  Fix parv[parc-1] usage.

	* ircd/m_kick.c (m_functions): Delete duplicative comment.
	(m_kick): Write doxygen comment.
	(ms_kick): Write doxygen comment.

	* ircd/m_kill.c (m_functions): Delete duplicative comment.
	(do_kill): Write doxygen comment.
	(ms_kill): Write doxygen comment.
	(mo_kill): Write doxygen comment.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* ircd/m_clearmode.c (m_functions): Delete duplicative comment.
	(do_clearmode): Write doxygen comment.
	(ms_clearmode): Write doxygen comment.
	(mo_clearmode): Write doxygen comment.

	* ircd/m_close.c (m_functions): Delete duplicative comment.
	(mo_close): Write doxygen comment.

	* ircd/m_connect.c (m_functions): Delete duplicative comment.
	(ms_connect): Write doxygen comment.
	(mo_connect): Write doxygen comment.

	* ircd/m_cprivmsg.c (m_functions): Delete duplicative comment.
	(m_cprivmsg): Write doxygen comment.  Fix parv[3] use.
	(m_cnotice): Write doxygen comment.  Fix parv[3] use.

	* ircd/m_create.c (m_functions): Delete duplicative comment.
	(ms_create): Write doxygen comment.

	* ircd/m_defaults.c (m_functions): Delete duplicative comment.
	(m_not_oper): Write doxygen comment.
	(m_unregistered): Write doxygen comment.
	(m_registered): Write doxygen comment.
	(m_ignore): Write doxygen comment.

	* ircd/m_destruct.c (ms_destruct): Convert comment to doxygen
	format.

	* ircd/m_desynch.c (m_functions): Delete duplicative comment.
	(ms_desynch): Write doxygen comment.

	* ircd/m_die.c (m_functions): Delete duplicative comment.
	(mo_die): Write doxygen comment.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* ircd/m_cap.c: Doxygenate structures, variables and functions
	that were not documented before.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* ircd/m_burst.c (m_functions): Delete duplicative comment.
	(netride_modes): Add doxygen comment.
	(ms_burst): Convert comment to doxygen format.

	* ircd/m_endburst.c (m_functions): Delete duplicative comment.
	(ms_end_of_burst): Convert comment to doxygen format.
	(ms_end_of_burst_ack): Convert comment to doxygen format.

	* ircd/m_error.c (m_functions): Delete duplicative comment.
	(mr_error): Write doxygen comment.
	(ms_error): Write doxygen comment.

	* ircd/m_get.c (m_functions): Delete duplicative comment.
	(mo_get): Write doxygen comment.

	* ircd/m_gline.c (m_functions): Delete duplicative comment.
	(ms_gline): Write doxygen comment.
	(mo_gline): Write doxygen comment.
	(m_gline): Write doxygen comment.

	* ircd/m_help.c (m_functions): Delete duplicative comment.
	(m_help): Write doxygen comment.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* ircd/m_account.c (m_functions): Remove large cut-and-paste
	comment.
	(ms_account): Write full doxygen comment.

	* ircd/m_admin.c (m_functions): Cut out the cut-and-paste.
	(send_admin_info): Add doxygen comment.
	(m_admin): Write full doxygen comment.
	(mo_admin): Likewise.
	(ms_admin): Likewise.

	* ircd/m_asll.c (m_functions): Kill the yank-and-killed block.
	(send_asll_reply): Add doxygen comment.
	(ms_asll): Write full doxygen comment.
	(mo_asll): Likewise.

	* ircd/m_away.c (m_functions): Trim back excess growth.
	(user_set_away): Write full doxygen comment.
	(m_away): Likewise.
	(ms_away): Likewise.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Include): Update documentation to reflect
	these changes.

	* ircd/ircd_parser.y (parse_error): Redefine to yyserror().
	(ConfigBlock): New enumerated type.
	(ConfigBlocks): New structure type.
	(includes): New file-scoped variable.
	(permitted): Function to check whether a block is permitted and
	optionally warn when it is not.
	(*): Check whether a block is permitted before letting it take
	effect.
	(includeblock): Rewrite.
	(blocklimit): New non-terminal with several productions.
	(blocktypes): Likewise.
	(blocktype): Likewise.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* include/s_conf.h (yyserror): Declare new function.
	(yywarning): Declare new function.

	* ircd/ircd_lexer.l (init_lexer): Ensure lexer initializes its
	state on rehash.
	(lexer_include): Support NULL filename to mean empty string.  If
	unable to open a file, warn with yyserror() but do the same.

	* ircd/s_conf.c (yyin): Remove declaration and do not touch.
	(yyserror): New function.
	(yywarning): New function.

2006-06-28  Michael Poole <mdpoole@troilus.org>

	* include/ircd_alloc.h (MyFree): Fix "if" nesting.

2006-06-27  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Demonstrate the new inclusion syntax.

	* ircd/ircd_lexer.l (init_lexer): Return a success indicator.
	(lexer_include): New function.
	(<<EOF>>): New handler.
	(CHANNEL): Remove unused terminal symbol.
	(TIMEOUT): Likewise.
	(FROM): Recognize new terminal symbol.
	(INCLUDE): Likewise.
	(LINESYNC): Likewise.

	* ircd/ircd_parser.y (%token): Remove CHANNEL, TIMEOUT; add
	INCLUDE, LINESYNC, FROM, TEOF.
	(block): Add includeblock production.
	(includeblock): New production with several child productions.

	* ircd/s_conf.c (lineno): Use external yylineno instead.
	(read_configuration_file): Check init_lexer() return value.
	(yyerror): Use yylineno instead.

2006-06-27  Michael Poole <mdpoole@troilus.org>

	* configure.ac: Make sure that $LEX is flex-compatible.

	* test.l: Helper file for this test.

	* ircd/ircd_lexer.l: Rewrite to use flex features.

	* ircd/s_conf.c (read_configuration_file): Pass configfile as a
	parameter to init_lexer().

2006-06-26  Michael Poole <mdpoole@troilus.org>

	* include/channel.h (CHFL_DEOPPED): Delete, along with its
	associated macros.
	(CHFL_SERVOPOK): Likewise.

	* include/client.h (FLAG_TS8): Likewise.

	* ircd/channel.c (mode_process_clients): Remove references to
	CHFL_DEOPPED, CHFL_SERVOPOK and FLAG_TS8

	* ircd/m_burst.c (ms_burst): Likewise.

	* ircd/m_join.c (m_join): Likewise.
	(ms_join): Likewise.

	* ircd/m_kick.c (m_kick): Remove references to FLAG_TS8.
	(ms_kick): Likewise.

	* ircd/m_mode.c (m_mode): Likewise.
	(ms_mode): Likewise.

	* ircd/m_notice.c (m_notice): Likewise.
	(ms_notice): Likewise.
	(mo_notice): Likewise.

	* ircd/m_part.c (m_part): Likewise.
	(ms_part): Likewise.

	* ircd/m_privmsg.c (m_privmsg): Likewise.
	(ms_privmsg): Likewise.
	(mo_privmsg): Likewise.

	* ircd/m_server.c (ms_server): Likewise.

	* ircd/m_wallchops.c (m_wallchops): Likewise.

	* ircd/m_wallvoices.c (m_wallvoices): Likewise.

	* ircd/s_user.c (register_user): Likewise.

2006-06-26  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd.c (main): Remove now-redundant call to motd_init() and
	#include "motd.h".

	* ircd/ircd_features.c (FEAT_NOINIT): New feature flag.
	(features): Use it on FEAT_RPATH.
	(feature_init): Make notify callbacks automatically.

	* ircd/motd.c (motd_init): Safely handle case where FEAT_MPATH
	and/or FEAT_RPATH have not yet been set.

2006-06-17  Michael Poole <mdpoole@troilus.org>

	* ircd/m_pass.c (mr_pass): Only back 'len' up when it's safe.

2006-06-08  Michael Poole <mdpoole@troilus.org>

	* ircd/m_whois.c (do_whois): Prefix '*' to names of secret (local)
	channels for locops as well as global opers.

2006-06-08  Michael Poole <mdpoole@troilus.org>

	* ircd/m_gline.c (ms_gline): Use final argument as G-line reason.

2006-06-08  Michael Poole <mdpoole@troilus.org>

	* ircd/gline.c (gline_stats): Show activation state in /stats g.

	* ircd/s_err.c (RPL_STATSGLINE): Update format string to match.

2006-06-07  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Document the list_chan privilege.

	* ircd/ircd_lexer.l: Recognize the token.

	* ircd/ircd_parser.y: Treat it appropriately.

2006-06-07  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (auth_ping_timeout): If the client never had an
	auth request, kill them on ping timeout.

2006-06-05  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (auth_timeout_callback): Clear AR_DNS_PENDING when
	destroying the lookup and reporting DNS failure.

2006-05-28  Michael Poole <mdpoole@troilus.org>

	* doc/readme.features (MAXBANS): Update default value.
	(NICKLEN): Likewise.
	(HIS_STATS_*): Sort alphabetically.

	* ircd/m_stats.c (m_stats): Describe the intention so that there
	are not further questions about local opers and remote /stats.
	Fix places that use cptr instead of sptr.

2006-05-24  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (auth_dns_callback): Be more careful about
	handling failed DNS lookups.  Use a more standard function to
	disconnect clients for IP mismatches.
	(start_auth): Use a more standard function to disconnect clients
	for peer or local socket address lookup failures.

2006-05-17  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (auth_ping_timeout): Fix off-by-one error.

2006-06-01  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/ircd_features.c: add FEAT_DEP to mark deprecated features
	with no replacement; create and use feat_type() macro to extract
	the type of a feature from its flags

	* doc/readme.features: update for new HIS_STATS_* names

	* doc/example.conf: update for new HIS_STATS_* names

2006-05-31  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/s_stats.c: use new names for controlling features

	* ircd/ircd_features.c: add support for deprecated aliases for
	features--allows a feature to be accessed by user or .conf by two
	names, but warns when the deprecated name is used; change all
	HIS_STATS_? features to aliases for the new names; remove
	unnecessary HIS_STATS_M

	* include/ircd_features.h: add features covering new names for
	FEAT_HIS_STATS_?; remove unnecessary FEAT_HIS_STATS_M

2006-05-15  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (check_auth_finished): Only check passwords on
	user ports.

2006-05-14  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Connect): Mention the vhost option.

2006-05-08  Michael Poole <mdpoole@troilus.org>

	* ircd/m_pong.c (mr_pong): Move cli_lasttime update from here...

	* ircd/s_auth.c (auth_set_pong): ... to here.

2006-05-07  Michael Poole <mdpoole@troilus.org>

	* include/s_auth.h (auth_ping_timeout): Declare new function.

	* ircd/ircd.c (check_pings): Move auth timeout logic into that new
	function.

	* ircd/s_auth.c (HeaderMessages): Insert new message.
	(auth_ping_timeout): Define new function.
	(auth_timeout_callback): Remove "hurry" notification from here.

2006-05-07  Michael Poole <mdpoole@troilus.org>

	* include/s_auth.h (destroy_auth_request): Remove second argument.

	* ircd/list.c (free_client): Update to match.

	* ircd/s_auth.c (check_auth_finished): Remove second argument and
	update call to destroy_auth_request().
	(send_auth_query): Update call to destroy_auth_request().
	(destroy_auth_request): Remove second argument.
	(auth_timeout_callback): Send timeout failure messages here
	instead.  Update call to check_auth_finished().
	(auth_dns_callback): Update call to check_auth_finished().
	(start_auth): Likewise.
	(auth_set_pong): Likewise.
	(auth_set_user): Likewise.
	(auth_set_nick): Likewise.
	(auth_cap_done): Likewise.
	(iauth_parse): Likewise.

2006-05-06  Michael Poole <mdpoole@troilus.org>

	* ircd/m_pong.c (mr_pong): No need to do any work if the client
	PONGs with no pending PING.

2006-05-06  Michael Poole <mdpoole@troilus.org>

	* ircd/m_pong.c (mr_pong): No need to do any work if the client
	PONGs with no pending PING.

2006-05-06  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (AuthRequestFlag): Add AR_PASSWORD_CHECKED.
	(check_auth_finished): Move password check out of iauth-only part
	and use AR_PASSWORD_CHECKED to make sure we only check it once.

2006-04-28  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (AuthRequest): Clarify comment on 'timeout' field.
	(check_auth_finished): Fix timeout update.
	(destroy_auth_request): Only delete timer if it is active.
	(auth_timeout_callback): Do not disconnect client on timeout, so
	that the user can finish sending NICK/USER or doing iauth.

2006-04-28  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Admin): Fix documentation of which line can be
	listed twice.

	* ircd/ircd_parser.y (adminblock): Allow admin information to be
	changed via /rehash.

2006-04-06  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (start_auth): Add client to list after getting
	endpoint names (which can apparently fail for some reason).

2006-04-06  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_snprintf.c: Use SIZEOF_LONG_LONG (which is 0 for
	unknown types) instead of the never-defined HAVE_LONG_LONG.

2006-04-06  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (IAuth): Update to reflect new syntax.

	* doc/readme.who: Fix typo in metasyntactic variable name.

2006-04-03  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (bmatch): If ipmask_check() indicates old_ban is
	a CIDR-wise superset of new_ban, check whether new_ban is a
	text-wise superset of old_ban.

2006-03-31  Michael Poole <mdpoole@troilus.org>

	* tools/iauth-test (send_server_notice): Use a colon prefix before
	the message.
	(%handlers): Likewise.

2006-03-24  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_signal.c (alloc_crec): Zero-fill returned
	ChildRecord structs.

	* ircd/jupe.c (make_jupe): Zero-fill newly allocated jupes.

	* ircd/list.c (make_link): Zero-fill returned SLink structs.

	* ircd/whowas.c (whowas_init): Delete function.
	(whowas_alloc): Rewrite to follow the more common pattern and to
	zero-fill returned Whowas structs.

2006-03-23  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/s_auth.c: rewrite iauth_read(), spliting out the parsing
	into iauth_parse(); change parsing to separate parameters and deal
	with the ':' sentinel; send sentinel in multi-word parameters; fix
	iauth_cmd_config() and iauth_cmd_stats() to clear the 'next'
	pointer in the SLink structure; fix buffering in
	iauth_read_stderr(); remove carriage returns from STDERR contents
	as well

	* doc/readme.iauth: fix a minor typo in comments for 'd' and 'N'
	server messages

2006-03-18  Michael Poole <mdpoole@troilus.org>

	* ircd/convert-conf.c (finish_features): Do not emit a feature
	setting that has no values.

2006-03-18  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (mode_parse_key): Outside of burst, allow
	overwriting of keys by a service when a key is already set.
	(mode_parse_upass): Likewise.  Instead, ignore new Upass during
	burst if it is lexicographically greater than the current one.
	(mode_parse_apas): Likewise for Apass, but only allow overwiting
	an existing Apass in a BURST.

2006-03-18  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (modebuf_flush_int): Fix typo about changing
	oplevels.  Send correct channel TS for modes to other servers.
	(mode_parse): Accept timestamps on modes from users on other
	servers.  If the received timestamp is too large, handle that.

	* ircd/m_create.c (ms_create): Mention the CREATE-during-burst
	case and handle it.

	* ircd/m_mode.c (ms_mode): Put back HACK(3) when oplevels are off.

2006-03-14  Wouter Coekarts <wouter@coekaerts.be>

	* ircd/s_err.c (RPL_STATSILINE): Add two %s to the first field.

	* ircd/s_stats.c (stats_configured_links): Use the new %s's to
	show username masks for I: lines that have them.
	(stats_access): Likewise.

2006-03-13  Michael Poole <mdpoole@troilus.org>

	* ircd/msgq.c (msgq_vmake): Try to clear msgbuf freelist after
	killing clients, so that that case does not lead immediately to a
	server panic.
	(msgq_count_memory): Report total buffer text used as a way to
	determine whether the BUFFERPOOL value is marginal.

2006-03-02  Michael Poole <mdpoole@troilus.org>

	* include/ircd_osdep.h (os_socket): New parameter.

	* include/res.h (irc_in_addr_unspec): New macro.

	* ircd/ircd_res.c (restart_resolver): Set family appropriately.

	* ircd/listener.c (inetport): Let os_ library pick socket family.

	* ircd/os_generic.c: Do not #define _XOPEN_SOURCE on FreeBSD 5+.
	(sockaddr_from_irc): New parameter.
	(os_sendto_nonb): Use new parameter to sockaddr_from_irc().
	(os_socket): New parameter.  Try to turn off IPV6_V6ONLY on
	sockets that listen on unspecified addresses.
	(os_connect_nonb): Use new parameter to sockaddr_from_irc().

	* ircd/s_auth.c (start_auth_query): Let os_ library pick socket
	family.

	* ircd/s_bsd.c (connect_inet): If we pick the IPv4 vhost, specify
	family for os_socket() as AF_INET.

	* ircd/uping.c (uping_init): Set socket family appropriately.
	(uping_server): Likewise.
	(uping_end): Fix format strings (the ms_* fields are int, not
	long, and this causes bad results on LP64 machines).

2006-02-22  Michael Poole <mdpoole@troilus.org>

	* ircd/m_silence.c (apply_silence): Refuse to apply silences for
	local users that are broader than an IPv4 /16 or an IPv6 /32,
	unless they match every host indiscriminately.

2006-02-22  Michael Poole <mdpoole@troilus.org>

	* ircd/s_auth.c (check_auth_finished): Give non-iauth clients
	connection classes, too.
	(auth_close_unused): Remove redundant check for iauth != NULL.
	(report_iauth_conf): Check iauth != NULL before deref'ing it.
	(report_iauth_stats): Likewise.

2006-02-22  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/s_auth.c: fix macros to not dereference a NULL pointer when
	iauth is not connected

2006-02-17  Alex Badea <vamposdecampos@gmail.com>

	* ircd/s_auth.c (auth_set_username): Check if the last
	character of the username is alphanumeric, instead of the
	'\0' terminator.
	
	* ircd/m_pong.c (mr_pong): Parse cookie with strtoul(),
	since atol() causes signedness problems.

2006-02-15  Michael Poole <mdpoole@troilus.org>

	* include/res.h (NXDOMAIN): Define.

	* ircd/ircd_res.c (res_readreply): Treat NXDOMAIN just like
	SERVFAIL.  Patch courtesy of Dianora.

	* tools/iauth-test (Carp): This doesn't actually use Carp.

2006-02-15  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Include new HIS_STATS_IAUTH feature.

	* doc/readme.features: Document the feature.

	* doc/readme.iauth: Rewrite to reflect the new progressive iauth
	protocol, based on IRCnet's iauth.

	* doc/snomask.html: Document SNO_AUTH server notice flag.

	* include/client.h (FLAG_IAUTHED): Delete.
	(con_cookie): Delete.
	(con_unreg): Delete.
	(con_auth): Make comment capitalization consistent.
	(con_iauth): Delete.
	(CLIREG_*): Delete.
	(cli_unreg): Delete.
	(cli_cookie): Delete.
	(cli_iauth): Delete.
	(con_unreg): Delete.
	(con_iauth): Delete.
	(IsIAuthed): Delete.
	(SetIAuthed): Delete.
	(SNO_AUTH): New server notice flag.
	(SNO_ALL): Update to include SNO_AUTH.
	(SNO_OPER): Update to include SNO_AUTH.

	* include/ircd_auth.h: Delete file.

	* include/ircd_features.h (HIS_STATS_IAUTH): New feature.

	* include/s_auth.h: Rewrite almost everything for new auth system.

	* include/s_user.h (COOKIE_VERIFIED): Delete.
	(register_user): Remove redundant nick and username arguments.

	* ircd/ircd_auth.c: Delete file.

	* ircd/ircd_features.c (HIS_STATS_IAUTH): New feature.

	* ircd/ircd_lexer.l (PROGRAM): New token in grammar.

	* ircd/ircd_log.c (masks): Add SNO_AUTH flag.

	* ircd/ircd_parser.y (stringlist): Simplify production.
	(iauthblock): Revise to only include a PROGRAM production.

	* ircd/list.c (make_client): Do not assign to deleted field.

	* ircd/m_cap.c (cap_ls): Use auth_cap_start() instead of
	cli_unreg().
	(cap_req): Likewise.
	(cap_end): Use auth_cap_done() instead of cli_unreg().

	* ircd/m_pass.c (mr_pass): Merge arguments to PASS.  Use
	auth_set_password() to notify iauth of password.

	* ircd/m_pong.c (mr_pong): Use auth_set_pong() instead of
	cli_cookie() and cli_unreg().

	* ircd/m_user.c (m_user): Use auth_set_user() instead of
	cli_unreg(), etc.

	* ircd/s_auth.c: Rewrite most of the infrastructure for the new
	auth system.

	* ircd/s_conf.c (rehash): Call auth_*() instead of iauth_*().

	* ircd/s_misc.c (exit_one_client): Do not use iauth_exit_client().
	(exit_client): Use auth_send_exit() instead.

	* ircd/s_stats.c (statsinfo): Include iauth and iauthconf.

	* ircd/s_user.c (clean_user_id): Delete (moved into s_auth.c).
	(register_user): Remove nick and username parameters; move conf
	interactions and username validation to s_auth.c.
	(set_nick_name): Use auth_set_nick() instead of cli_cookie(),
	cli_unreg(), etc.

	* tools/iauth-test: Implementation of iauth for testing purposes.

2006-02-15  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd_snprintf.c (doprintf): Fix typecast for %hu.

2006-02-15  Michael Poole <mdpoole@troilus.org>

	* include/ircd_signal.h (SigChldCallBack): New typedef.
	(register_child): Declare.
	(unregister_child): Declare.
	(reap_children): Declare.

	* ircd/ircd_signal.c (alloc_crec): New function.
	(release_crec): New function.
	(register_child): New function.
	(do_unregister_child): New function.
	(unregister_child): New function.
	(sigchld_callback): New function.
	(setup_signals): Hook SIGCHLD.
	(reap_children): New function.

	* ircd/ircd.c (server_restart): Call reap_children() on exit.

2006-02-15  Michael Poole <mdpoole@troilus.org>

	* include/ircd_osdep.h (os_socketpair): Declare.

	* ircd/os_generic.c (is_blocked): New local function.
	(os_*): Use is_blocked() instead of cut-and-pasted code.
	(os_socketpair): New function.

2006-02-15  Michael Poole <mdpoole@troilus.org>

	* ircd/match.c (match): Fix backtracking bug after an escape
	(reported by Michael, I think).

2006-02-04  Michael Poole <mdpoole@troilus.org>

	* ircd/ircd.c (try_connections): Scan all Connect blocks for the
	earliest hold time (suggested by Michael).

2006-02-04  Michael Poole <mdpoole@troilus.org>

	* ircd/m_join.c (m_join): Remove #if 0 code and update comment.

	* ircd/m_mode.c (ms_mode): Remove self-op support.

2006-01-11  Michael Poole <mdpoole@troilus.org>

	* doc/Makefile.in: Make install target VPATH-safe.

	* doc/example.conf: Comment out example IAuth block.

	* ircd/m_burst.c (ms_burst): Change isdigit() to IsDigit(),
	silencing a warning on Solaris.

2006-01-09  Michael Poole <mdpoole@troilus.org>

	* ircd/s_user.c (register_user): Do not send +r flag to user when
	they first connect.

2006-01-09  Michael Poole <mdpoole@troilus.org>

	* include/ircd_features.h (FEAT_ZANNELS): Actually, put it back.

	* ircd/ircd_features.c (FEAT_ZANNELS): Likewise.

2006-01-06  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (mode_process_clients): Do not reveal zombies who
	are being opped (MODE and KICK crossed).  Reported by coekie.

2006-01-06  Michael Poole <mdpoole@troilus.org>

	* ircd/m_join.c (ms_join): Wipe out all modes (not just chanops)
	when replacing a resurrected channel.

	* ircd/convert-conf.c (dupstring): Fix probable off-by-one size
	passed to memcpy().

2006-01-03  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (modebuf_flush_int): Also send timestamp when &me
	originates the MODE going to other servers (currently just when a
	client joins a zannel or uses an A/U password).

2006-01-02  Michael Poole <mdpoole@troilus.org>

	* include/ircd_features.h (FEAT_ZANNELS): Remove.

	* ircd/channel.c (sub1_from_channel): Remove reference to
	FEAT_ZANNELS.

	* ircd/ircd_features.c (FEAT_ZANNELS): Remove.

	* ircd/m_destruct.c (ms_destruct): Do not try to remove a destruct
	event for channels that do not have them (created by BURSTing a
	zannel but not yet destroyed by EOB).

2005-12-31  Michael Poole <mdpoole@troilus.org>

	* ircd/m_whowas.c (m_whowas): Mention that IP is untracked in WHOWAS.
	Spotted by Progs.

2006-01-08  Perry Lorier <isomer@undernet.org>

	* ircd/channel.c ircd/channel.c ircd/convert-conf.c ircd/ircd_parser.y
	ircd/m_invite.c ircd/parse.c ircd/s_stats.c ircd/mkpasswd.c: more
	statsification

2006-01-06  Michael Poole <mdpoole@troilus.org>

	* include/ircd_log.h (log_vwrite): Re-export this symbol, which is
	needed for DEBUGMODE.

	* include/s_bsd.h (ACCEPT_ERROR_MSG): Undeclare this symbol, which
	is static in s_bsd.c (causing gcc 4.x to error out).
	(PEERNAME_ERROR_MSG): Likewise.
	(POLL_ERROR_MSG): Likewise.
	(SELECT_ERROR_MSG): Likewise.
	(CONNECT_ERROR_MSG): Likewise.
	(REGISTER_ERROR_MSG): Likewise.

	* include/ircd.c (debuglevel): Re-export this symbol, which is
	needed in s_debug.c for DEBUGMODE.

	* ircd/ircd_log.c (log_vwrite): Likewise.

	* ircd/umkpasswd.c (crypt_mechs_root): Re-export this symbol,
	which is always needed in s_stats.c.

2006-01-07  Perry Lorier <isomer@undernet.org>

	* ircd/crule.c ircd/ircd.c ircd/ircd_alloc.c ircd/motd.c ircd/s_conf.c
	  ircd/uping.c: Convert DEBUG's to log_write's 

2006-01-07  Perry Lorier <isomer@undernet.org>

	* ircd/*.c include/*.h: Add static to functions where possible,
	removing the occasional completely unused function.

	* ircd/ircd.c: Convert some DEBUG(())'s to log_write's

2005-12-30  Michael Poole <mdpoole@troilus.org>

	* ircd/m_topic.c: Remove block comment about sptr, cptr, etc.
	(do_settopic): Add doxygen comment. Move permissions checks..
	(m_topic): .. to here.  Update doxygen comment.
	(ms_topic): Update doxygen comment here too.

2005-12-30  Michael Poole <mdpoole@troilus.org>

	* ircd/s_conf.c (conf_debug_iline): Fix display of null passwords.

2005-12-30  Michael Poole <mdpoole@troilus.org>

	* RELEASE.NOTES: Mention removal of HIS_STATS_h.

	* ircd/convert-conf.c (removed_features): Add AUTOHIDE,
	HIS_DESYNCS and TIMESEC.
	(get_connect): Do not downcase connection name on insert.
	(do_feature): Do not upcase feature name (cf HIS_STATS_k).

2005-12-30  Michael Poole <mdpoole@troilus.org>

	* ircd/engine_devpoll.c (engine_loop): Remove bogus assert.

2005-12-31  Perry Lorier <isomer@undernet.org>

	* convert-conf.c: Skip with a warning, H:'s that are missing a
	corresponding C:

2005-12-29  Michael Poole <mdpoole@troilus.org>

	* configure.ac: ircd/test/Makefile is a new output file.

	* configure: Regenerate.

	* ircd/Makefile.am: Include "test" subdirectory in build.

	* ircd/Makefile.in: Regenerate.

	* ircd/test/Makefile.am: New automake Makefile.

	* ircd/test/Makefile.in: Overwrite with generated version.

2005-12-29  Michael Poole <mdpoole@troilus.org>

	* include/ircd.h: Make maxclients and maxconnections variable.

	* include/list.h (init_list): Add maximum connections argument.

	* include/s_bsd.h (HighestFd): Align declaration.
	(LocalClientArray): Convert into a pointer-to-pointer.
	(init_connection_limits): Add maximum connections argument.

	* ircd/ircd.c (maxconnections): Define.
	(maxclients): Define.
	(parse_command_line): Fix doxygen typo.  Interpret -m <maxconn>
	and -M <maxclients> arguments.
	(main): Sanity-check maxconnections and maxclients.

	* ircd/list.c (init_list): Add maximum connections argument.

	* ircd/listener.c (accept_connection): Use maxclients variable.

	* ircd/m_trace.c (do_trace): Dynamically allocate link_s and
	link_u arrays.
	(m_trace): Update doxygen comments.
	(ms_trace): Likewise.
	(mo_trace): Likewise.

	* ircd/numnicks.c (SetYXXCapacity): Update error message and make
	it a soft error rather than a fatal one.

	* ircd/os_generic.c (os_socket): Use maxclients variable.

	* ircd/s_bsd.c (LocalClientArray): Update type.
	(close_connections): Use maxconnections variable.
	(init_connection_limits): Add maximum connections argument.  Use
	it to allocate LocalClientArray.

	* ircd/s_misc.c (tstats): Use HighestFd variable instead of
	MAXCONNECTIONS.

2005-12-28  Michael Poole <mdpoole@troilus.org>

	* include/sys.h: Delete this file.

	* include/ircd.h: Move its definitions here.  Update MINOR_PROTOCOL.

	* ircd/channel.c: No longer #include "sys.h", use "ircd.h" instead.

	* ircd/dbuf.c, ircd/ircd.c, ircd/ircd_res.c: Likewise.

	* ircd/listener.c, ircd/m_join.c, ircd/m_nick.c: Likewise.

	* ircd/os_generic.c, ircd/uping.c: Likewise.

	* ircd/hash.c: No longer #include "sys.h".  (It was unused.)

	* ircd/ircd_features.c, ircd/jupe.c, ircd/parse.c: Likewise.

	* ircd/s_auth.c, ircd/s_bsd.c, ircd/s_conf.c: Likewise.

	* ircd/s_debug.c, ircd/s_misc.c, ircd/s_serv.c: Likewise.

	* ircd/s_user.c, ircd/send.c, ircd/userload.c: Likewise.

	* ircd/whowas.c: Likewise.

2005-12-28  Michael Poole <mdpoole@troilus.org>

	* acinclude.m4: Properly quote function names.

	* aclocal.m4: Regenerate.

	* Makefile.in: Likewise.

	* configure: Likewise.

	* ircd/Makefile.in: Likewise.

2005-12-28  Michael Poole <mdpoole@troilus.org>

	* ircd-patch: Do not use [ for test, and do not use $[] for expr.
	(Solaris /bin/sh, among others, have problems with those.)

2005-12-23  Michael Poole <mdpoole@troilus.org>

	* config.guess: Update to current version.

	* config.sub: Likewise.

2005-12-23  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/m_join.c: get rid of MAGIC_REMOTE_JOIN_TS; perform the
	deop-other-users loop only when creation < channel timestamp or
	when the channel in question happens to be a zannel; actually deop
	users, don't just say we are and not do it

	* ircd/m_create.c (ms_create): get rid of MAGIC_REMOTE_JOIN_TS

	* include/channel.h: get rid of MAGIC_REMOTE_JOIN_TS

2005-12-22  Kevin L. Mitchell  <klmitch@mit.edu>

	* ircd/ircd_lexer.l: automake does renaming tricks with the output
	of lex and yacc, so change header name to match

	* ircd/Makefile.in: replace hand-made Makefile.in with Makefile.am

	* ircd/Makefile.am: replace hand-made Makefile.in with Makefile.am

	* missing: automake-related file

	* depcomp: automake-related file

	* configure.ac: replace old configure.in with new configure.ac set
	up to play nice with automake

	* configure: regenerate from new configure.ac

	* config.h.in: regenerate

	* aclocal.m4: regenerate

	* acinclude.m4: factor out some repetitious code dealing with
	--enable-* and --with-*

	* Makefile.in: replace hand-made Makefile.in with Makefile.am

	* Makefile.am: replace hand-made Makefile.in with Makefile.am

2005-12-13  Michael Poole <mdpoole@troilus.org>

	* ircd/m_join.c (ms_join): Prevent net rides allowed by moving the
	channel timestamp backwards in time without deopping current ops.
	(Reported by Wouter Coekaerts.)

2005-12-13  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Remove extraneous "Other" Client block.

	* ircd/convert-conf.c (finish_operators): Fix operator precedence
	bug.

	* ircd/ircd_parser.y (clientclass): Fix typo in error message.

2005-11-27  Michael Poole <mdpoole@troilus.org>

	* ircd/Makefile.in (version.c): version.c also depends on
	version.h, patchlevel.h and source files.

2005-11-27  Michael Poole <mdpoole@troilus.org>

	* ircd/m_join.c (m_join): Count a join to a new channel as a
	target change.

2005-11-19  Michael Poole <mdpoole@troilus.org>

	* ircd/s_stats.c (stats_servers_verbose): Display IPv6 support
	flag with the other per-server flags.

2005-11-19  Michael Poole <mdpoole@troilus.org>

	* ircd/convert-conf.c (finish_features): Only emit "Features {"
	once in the converted configuration file.  Display the original
	input line for each feature line in the output.

2005-11-15  Brian Cline <brian.cline@gmail.com>

	* doc/example.conf: Add new line for HIS_MODEWHO feature.

	* doc/readme.features: Document new HIS_MODEWHO feature.

	* include/ircd_features.h: Declare new HIS_MODEWHO feature.

	* ircd/channel.c (modebuf_flush_int): Use new HIS_MODEWHO feature
	to show or hide the server name that performed a channel mode change.

	* ircd/ircd_features.c: Place new HIS_MODEWHO setting in the feature
	table and give it a default value of true, which will hide the
	originating server name.

2005-11-16  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf (Features): Mention ZANNELS default.

	* doc/readme.features: Document OPLEVELS and ZANNELS.

2005-11-17  Carlo Wood <run@alinoe.com>

	* include/ircd_features.h (Feature): Add ZANNELS.
	* ircd/ircd_features.c (FeatureDesc): idem.
	* ircd/channel.c (sub1_from_channel): Don't keep zannels
	around when ZANNELS and OPLEVELS are FALSE.
	* ircd/m_destruct.c (ms_destruct): Use JOIN instead of
	CREATE to recreate a non-empty channel after DESTRUCT.

2005-11-16  Michael Poole <mdpoole@troilus.org>

	* tools/convert-conf.py: Delete obsolete code.

2005-11-16  Michael Poole <mdpoole@troilus.org>

	* ircd/m_names.c (m_names): Fix handling of NAMES #a,#b.
	(ms_names): Likewise.

2005-11-15  Michael Poole <mdpoole@troilus.org>

	* ircd/m_nick.c (ms_nick): Clarify message when an older nick
	overrules a newer nick.  When killing a client for a nick
	collision, make sure to use the numnick as the first argument.

2005-11-14  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (member_can_send_to_channel): After prodding from
	reed, always allow remote users to send to a channel.  He also
	pointed out a bug in the first version of this change.

2005-11-14  Carlo Wood <run@alinoe.com>

	* ircd/channel.c (modebuf_flush_int): Fix test for limitdel.
	(modebuf_mode_uint): Make sure the limit is included as an
	argument when necessary (and only when necessary) in a bounce.

	* ircd/m_destruct.c (ms_destruct): Generate a mode bounce instead
	of burst to resynchronize a non-empty destructed channel.

2005-11-14  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (find_no_nickchange_channel): Disallow nick
	changes by voiceless no-account users on a +r channel.

2005-11-14  Michael Poole <mdpoole@troilus.org>

	* ircd/m_kick.c (ms_kick): Fix test for whether a client's own
	server is kicking him.

2005-11-13  Carlo Wood <run@alinoe.com>

	* ircd/m_create (ms_create): Accept CREATE for zannels.

	* ircd/m_join.c (m_join): MODE +o for a zannel must come from the
	server for compatibility with older versions.

2005-11-11  Michael Poole <mdpoole@troilus.org>

	* doc/readme.cvs: Document tag name consistently with the release
	name.

	* ircd/ircd_res.c (proc_answer): Follow CNAME when doing A
	and AAAA lookups as well as PTR.

2005-11-07  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (mode_parse_client): Allow clients to specify
	oplevel in MODE #channel +o.
	(mode_process_clients): Allow oplevel 999 to deop another 999.

	* ircd/kick.c (m_kick): Allow oplevel 999 to kick another 999.

2005-10-31  Michael Poole <mdpoole@troilus.org>
	(Based on a patch by Romain Bignon <progs@ir3.org>)

	* ircd/channel.c: Some modes (currently only WASDELJOINS) should
	not be propagated to remote servers.

2005-10-30  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (mode_parse_apass): Move all send_reply() errors
	inside an if (MyUser(state->sptr)) test.

	* ircd/m_join.c (m_join): Reorganize zannel join check to match
	surrounding code.

2005-10-30  Carlo Wood <run@alinoe.com>

	* ircd/channel.c (sub1_from_channel): Delay destruction for -A
	channels.  They become zombie channels (zannels).
	(mode_parse_upass): Add duration to ERR_NOMANAGER message.
	(mode_parse_apass): Likewise.  Unconditionally set the member who
	sets Apass as oplevel 0.  Clear Upass when clearing Apass.
	(joinbuf_join): Remove code to pass oplevel in JOIN.

	* ircd/m_burst.c (ms_burst): Handle zannels.

	* ircd/m_join.c (m_join): Handle a join to a zannel.  If the user
	is joining with ops and/or an oplevel, send those.
	(ms_join): Stop trying to parse oplevels in JOIN.  Copy join
	timestamp when a user joins a zannel.

	* ircd/m_mode.c (ms_mode): Never generate HACK3.  Silently allow a
	user to op himself if he is the only one in a channel.

	* ircd/s_err.c (ERR_UPASSSET): Remove extra space.
	(ERR_UPASSNOTSET): Likewise.
	(ERR_NOMANAGER): Add field for channel lifetime.

2005-10-30  Michael Poole <mdpoole@troilus.org>

	* ircd/m_join.c (m_join): Reorganize to reduce edit distance from
	previous version and match code on u2_10_12_branch.

2005-10-30  Michael Poole <mdpoole@troilus.org>

	* .cvsignore: Add autom4te.cache.

	* ircd/.cvsignore: Add convert-conf.

	* ircd/test/.cvsignore: Add ircd_match_t.

	* patches/.cvsignore: Add marks.

2005-10-30  Andrew Miller  <a1kmm@amxl.com>

	* ircd/m_join.c (m_join): Fix check for OVERRIDE when the real channel
	key is override.

2005-10-28  Alex Badea  <vamposdecampos@gmail.com>

	* ircd/m_kick.c (ms_kick): Fix format string typo (bug #1339538)

2005-10-17  Michael Poole <mdpoole@troilus.org>
	This code inspired by ircd-hybrid's implementation of the same
	idea.  Thanks, Dianora!

	* include/s_user.h: Declare isupport manipulation functions.

	* include/supported.h: Delete.

	* ircd/ircd.c (main): Call init_isupport().

	* ircd/ircd_features.c (set_isupport_*): New functions to set
	feature-based isupport settings.

	* ircd/m_defaults.c: Remove unused #include "supported.h".

	* ircd/m_proto.c: Likewise.

	* ircd/m_version.c: Likewise.

	* ircd/s_user.c: Remove #include "supported.h".  Declare new
	struct ISupport.
	(isupport): New file-scope variable.
	(isupport_lines): Likewise.
	(touch_isupport): New function.
	(get_clean_isupport): New function.
	(add_isupport*): New functions.
	(del_isupport): New function.
	(build_isupport_lines): New function.
	(init_isupport): New function.
	(send_supported): Rewrite to use the above.

	* ircd/Makefile.in: Update dependencies.

2005-10-17  Diane Bruce  <db@db.net>

	* ircd/ircd_res.c: Don't send retries if the client did
	not resolve (SERVFAIL); this fixes a bug causing a flurry
	of retries in this case

2005-10-12  Michael Poole <mdpoole@troilus.org>

	* doc/example.conf: Update documentation to match this change.

	* ircd/client.c (client_set_privs): Make default global oper
	privileges match what was in 2.10.11.

2005-10-12  Perry Lorier <isomer@undernet.org>

	* include/s_stats.h: Add new "Local" only flag to /stats.

	* ircd/m_stats.c: Consult it.

	* ircd/s_stats.c: Use the flag.

2004-01-04  Kevin L Mitchell  <klmitch@mit.edu>

	* ircd/s_numeric.c (do_numeric): fix a crash when a numeric is
	sent to a channel...

2005-10-06  Michael Poole <mdpoole@troilus.org>

	* ircd/channel.c (clean_channelname): Delete unused function.

	* ircd/m_join.c (m_join): Report too-long channel names as
	non-existent.

2005-10-05  Michael Poole <mdpoole@troilus.org>

	* ircd/m_names.c (m_names): Fix format string when forwarding
	/names -D to other servers.
	(ms_names): Likewise.  Add support for remote /names -D.

2005-10-05  Michael Poole <mdpoole@troilus.org>

	* ircd/class.c (do_find_class): Fix bug from previous commit.

	* ircd/ircd_parser.y (clientblock): Allow setting Client port.

	* ircd/s_conf.c (check_limit_and_attach): Merge into attach_iline.
	(attach_iline): Only set FLAG_DOID when we are sure we will attach
	this Client block to the client. [Credit: Jukka Ollila and others]

2004-03-20  Fredrik Soderblom <froo@quakenet.org>

	* doc/readme.features: Document this new feature.

	* include/ircd_features.h (FEAT_USER_GLIST): New feature.

	* ircd/m_gline.c (m_gline): Consult it.

	* ircd/ircd_features.c (FEAT_USER_GLIST): Define it.

2005-10-04  Michael Poole <mdpoole@troilus.org>
	[Based on a patch by Jukka Ollila]

	* include/class.h (find_class): Rename to do_find_class().

	* ircd/class.c (class_delete_marked): Keep invalid classes in list
	until next rehash.
	(add_class): Use new parameter to do_find_class() to allow a class
	to be "resurrected".
	(find_class): Rename.
	(report_classes): Use 'y' instead of 'Y' when reporting invalid
	classes.

2005-10-01  Michael Poole <mdpoole@troilus.org>

	* ircd/m_kick.c (m_kick): Remove gratuitous CheckDelayedJoins().
	(ms_kick): If the kick target is join-delayed, only send the KICK
	to the kicker.  Spotted by Cesar_.

2005-10-01  Michael Poole <mdpoole@troilus.org>

	* ircd/class.c (init_class): Only set default class's ->next
	pointer when first allocating it.

2005-09-30  Michael Poole <mdpoole@troilus.org>

	* ircd/m_who.c (m_who): Handle matchsel & WHO_FIELD_ACC when
	matching users.

2005-09-30  Michael Poole <mdpoole@troilus.org>

	* include/whocmds.h: File becomes unused and almost empty; remove.

	* ircd/whocmds.c: Likewise.

	* ircd/gline.c (count_users): Move from whocmds.c and make static.

	* ircd/m_who.c: Doxygenate comments about command handlers.  Do
	not #include "whocmds.h", but instead #include "ircd_snprintf.h".
	(WHOSELECT_*): Moved from whocmds.h.
	(WHO_FIELD_*): Likewise.
	(IS_VISIBLE_USER): Likewise.
	(SEE_LUSER): Likewise.
	(SEE_USER): Likewise.
	(SHOW_MORE): Likewise.
	(SEE_CHANNEL): Likewise.
	(do_who): Move from whocmds.c and make static.

	* ircd/m_whois.c: Do not #include "whocmds.h".
	(MAX_WHOIS_USERS): Moved from whocmds.h.

	* ircd/parse.c: Do not #include "whocmds.h".

	* ircd/Makefile.in: Remove mention of whocmds.  Update depends.

2005-09-30  Michael Poole <mdpoole@troilus.org>

	* ircd/test/Makefile.in: Add missing path component in warning
	message about Makefile.in.bak.

2005-09-30  Michael Poole <mdpoole@troilus.org>

	* ChangeLog: Move old contents to ChangeLog.12 and create anew.

	* include/patchlevel.h: Bump to 2.10.13.alpha.0.
